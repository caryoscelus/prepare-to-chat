// Generated by psc version 0.6.1.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showNumberImpl(n) {  return n.toString();};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (_41) {
        return function (_42) {
            return _41;
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _473 = compare(__dict_Ord_11)(a1)(a2);
                if (_473 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _474 = compare(__dict_Ord_12)(a1)(a2);
                if (_474 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _475 = compare(__dict_Ord_13)(a1)(a2);
                if (_475 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _476 = compare(__dict_Ord_14)(a1)(a2);
                if (_476 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "$": $dollar, 
        "%": $percent, 
        "&&": $amp$amp, 
        "*": $times, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        "/": $div, 
        "/=": $div$eq, 
        ":": $colon, 
        "<": $less, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<=": $less$eq, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">=": $greater$eq, 
        ">>=": $greater$greater$eq, 
        ">>>": $greater$greater$greater, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Bits: Bits, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        complement: complement, 
        cons: cons, 
        "const": $$const, 
        eqArray: eqArray, 
        eqNumber: eqNumber, 
        eqString: eqString, 
        flip: flip, 
        id: id, 
        liftA1: liftA1, 
        negate: negate, 
        not: not, 
        numNumber: numNumber, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        otherwise: otherwise, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupString: semigroupString, 
        semigroupoidArr: semigroupoidArr, 
        show: show, 
        showNumber: showNumber, 
        unit: unit, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var floor = Math.floor;;
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    return {
        floor: floor, 
        min: min
    };
})();
var PS = PS || {};
PS.Eps = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var eps = 0.1;
    var ieq = function (a) {
        return function (b) {
            return (a - b) < eps && (b - a) < eps;
        };
    };
    return {
        eps: eps, 
        ieq: ieq
    };
})();
var PS = PS || {};
PS.Debug = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function debug (s) {
        return function (a) {
            console.log(s);
            return a;
        }
    }
    ;
    return {
        debug: debug
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var charString = function (_69) {
        return _69;
    };
    return {
        charString: charString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Element = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeGetElementById(targ_id) {        return function (src) {                         return function () {                            return src.getElementById(targ_id);         };                                          };                                          };
    function unsafeGetElementsByClassName(targ_id) {     return function (src) {                              return function () {                                 return src.getElementsByClassName(targ_id);      };                                               }                                                };
    function unsafeGetElementsByName(targ_id) {        return function (src) {                            return function () {                               return src.getElementsByName(targ_id);         };                                             };                                             };
    function unsafeQuerySelector(selector) {     return function (src) {                      return function () {                         return src.querySelector(selector);      };                                       };                                       };
    function unsafeQuerySelectorAll(selector) {    return function (src) {                        return function () {                           return src.querySelectorAll(selector);     };                                         };                                         };
    function unsafeGetAttribute(name) {        return function (src) {                    return function () {                       return src.getAttribute(name);         };                                     };                                     };
    function unsafeSetAttribute(name) {        return function (value) {                  return function (src) {                    return function () {                       src.setAttribute(name, value);           return {};                             };                                     };                                     };                                     };
    function unsafeHasAttribute(name) {        return function (src) {                    return function () {                       return src.hasAttribute(name);         };                                     };                                     };
    function unsafeRemoveAttribute(name) {     return function (src) {                    return function () {                       src.removeAttribute(name);               return {};                             };                                     };                                     };
    function unsafeChildren(src) {               return function () {                       return src.children;                 };                                     };
    function unsafeInnerHTML(src) {            return function () {                       return src.innerHTML;                  };                                     };
    function unsafeSetInnerHTML(value) {       return function (src) {                    return function () {                       src.innerHTML = value;                   return {};                             };                                     };                                     };
    function unsafeTextContent(src) {          return function () {                       return src.textContent;                };                                     };
    function unsafeSetTextContent(value) {     return function (src) {                    return function () {                       src.textContent = value;                 return {};                             };                                     };                                     };
    function unsafeValue(src) {                return function () {                       return src.value;                      };                                     };
    function unsafeSetValue(value) {           return function (src) {                    return function () {                       src.value = value;                       return {};                             };                                     };                                     };
    function unsafeContentWindow(obj) {    return function () {                   return obj.contentWindow;          };                                 };
    function unsafeClassAdd(value) {           return function (src) {                    return function () {                       src.classList.add(value);                return {};                             };                                     };                                     };
    function unsafeClassRemove(value) {        return function (src) {                    return function () {                       src.classList.remove(value);             return {};                             };                                     };                                     };
    function unsafeClassToggle(value) {        return function (src) {                    return function () {                       src.classList.toggle(value);             return {};                             };                                     };                                     };
    function unsafeClassContains(value) {          return function (src) {                        return function () {                           return src.classList.contains(value);      };                                         };                                         };
    
  function unsafeFocus(src) {
    return function () {
      src.focus();
      return {};
    };
  };
    return {
        unsafeChildren: unsafeChildren, 
        unsafeClassAdd: unsafeClassAdd, 
        unsafeClassContains: unsafeClassContains, 
        unsafeClassRemove: unsafeClassRemove, 
        unsafeClassToggle: unsafeClassToggle, 
        unsafeContentWindow: unsafeContentWindow, 
        unsafeFocus: unsafeFocus, 
        unsafeGetAttribute: unsafeGetAttribute, 
        unsafeGetElementById: unsafeGetElementById, 
        unsafeGetElementsByClassName: unsafeGetElementsByClassName, 
        unsafeGetElementsByName: unsafeGetElementsByName, 
        unsafeHasAttribute: unsafeHasAttribute, 
        unsafeInnerHTML: unsafeInnerHTML, 
        unsafeQuerySelector: unsafeQuerySelector, 
        unsafeQuerySelectorAll: unsafeQuerySelectorAll, 
        unsafeRemoveAttribute: unsafeRemoveAttribute, 
        unsafeSetAttribute: unsafeSetAttribute, 
        unsafeSetInnerHTML: unsafeSetInnerHTML, 
        unsafeSetTextContent: unsafeSetTextContent, 
        unsafeSetValue: unsafeSetValue, 
        unsafeTextContent: unsafeTextContent, 
        unsafeValue: unsafeValue
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Events = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeAddEventListener(targ) {                return function (cb) {                                  return function (src) {                                return function () {                                   src.addEventListener(targ, function(evt) {             cb(evt)();                                         });                                                };                                                 };                                                };                                                 };
    function unsafeRemoveEventListener(targ) {                 return function (cb) {                                      return function (src) {                                    return function () {                                       src.removeEventListener(targ, function (evt) {             cb(evt)();                                             });                                                    };                                                     };                                                    };                                                     };
    function unsafeEventTarget(event) {   return function () {             return event.target;         };                           };
    function unsafeStopPropagation(event) {   return function () {               event.stopPropagation();        }                              };
    function unsafePreventDefault(event) {   return function () {               event.preventDefault();        }                              };
    function unsafeEventKey(event) {              return function() {                           return event.key === undefined                 ? String.fromCharCode(event.keyCode)        : event.key;                           };                                        };
    function unsafeEventKeyCode(event) {   return function() {                    return event.keyCode               };                                 };
    function unsafeEventNumberProp(prop) {    return function (event) {                 return function() {                       return event[prop];                   };                                    };                                    };
    function unsafeEventStringProp(prop) {    return function (event) {                 return function() {                       return event[prop];                   };                                    };                                    };
    function unsafeEventBooleanProp(prop) {   return function (event) {                 return function() {                       return !!event[prop];                 };                                    };                                    };
    function unsafeEventView(event) {   return function() {                 return event.view;              };                              };
    return {
        unsafeAddEventListener: unsafeAddEventListener, 
        unsafeEventBooleanProp: unsafeEventBooleanProp, 
        unsafeEventKey: unsafeEventKey, 
        unsafeEventKeyCode: unsafeEventKeyCode, 
        unsafeEventNumberProp: unsafeEventNumberProp, 
        unsafeEventStringProp: unsafeEventStringProp, 
        unsafeEventTarget: unsafeEventTarget, 
        unsafeEventView: unsafeEventView, 
        unsafePreventDefault: unsafePreventDefault, 
        unsafeRemoveEventListener: unsafeRemoveEventListener, 
        unsafeStopPropagation: unsafeStopPropagation
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Window = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeDocument(win) {      return function () {                return win.document;            };                              };
    function unsafeLocation(win) {     return function () {               return win.location;           };                             };
    function unsafeSetTimeout(win) {   return function(delay) {     return function(func) {       return function() {         return win.setTimeout(func, delay);       };     };   }; };
    function unsafeSetInterval(win) {   return function(delay) {     return function(func) {       return function() {         return win.setInterval(func, delay);       };     };   }; };
    function unsafeClearTimeout(win) {   return function(timeout) {     return function() {       win.clearTimeout(timeout);     };   }; };
    function unsafeInnerWidth(win) {   return function() {     return win.innerWidth;   }; };
    function unsafeInnerHeight(win) {   return function() {     return win.innerHeight;   }; };
    return {
        unsafeClearTimeout: unsafeClearTimeout, 
        unsafeDocument: unsafeDocument, 
        unsafeInnerHeight: unsafeInnerHeight, 
        unsafeInnerWidth: unsafeInnerWidth, 
        unsafeLocation: unsafeLocation, 
        unsafeSetInterval: unsafeSetInterval, 
        unsafeSetTimeout: unsafeSetTimeout
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Speaking = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function randomAuthor (_) {
        var _Mkeys = Object.keys(_allQuotes);
        var n = Math.floor(_Mkeys.length * Math.random());
        return _Mkeys[n];
    }
    ;
    
    function randomAuthorQuote (author) {
        var _Mquotes = _allQuotes[author];
        var n = Math.floor(_Mquotes.length * Math.random());
        return _Mquotes[n];
    }
    ;
    return {
        randomAuthor: randomAuthor, 
        randomAuthorQuote: randomAuthorQuote
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var maybe = function (_99) {
        return function (_100) {
            return function (_101) {
                if (_101 instanceof Nothing) {
                    return _99;
                };
                if (_101 instanceof Just) {
                    return _100(_101.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isJust = maybe(false)(Prelude["const"](true));
    return {
        Just: Just, 
        Nothing: Nothing, 
        isJust: isJust, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var head = function (_119) {
        if (_119.length >= 1) {
            var _486 = _119.slice(1);
            return new Data_Maybe.Just(_119[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var functorArray = new Prelude.Functor(map);
    return {
        "!!": $bang$bang, 
        append: append, 
        drop: drop, 
        filter: filter, 
        functorArray: functorArray, 
        head: head, 
        length: length, 
        map: map, 
        reverse: reverse, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Utils = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    function ensure3(nothing) {   return function(just) {     return function(v) {       if (v === undefined || v === null)         return nothing;       else         return just(v);     }  } };
    var ensure = ensure3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    return {
        ensure: ensure, 
        ensure3: ensure3
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        mempty: mempty
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var snd = function (_197) {
        return _197.value1;
    };
    return {
        Tuple: Tuple, 
        snd: snd
    };
})();
var PS = PS || {};
PS.Text_Smolder_Markup = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Parent(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Parent.create = function (value0) {
        return function (value1) {
            return new Parent(value0, value1);
        };
    };
    function Leaf(value0) {
        this.value0 = value0;
    };
    Leaf.create = function (value0) {
        return new Leaf(value0);
    };
    function Content(value0) {
        this.value0 = value0;
    };
    Content.create = function (value0) {
        return new Content(value0);
    };
    function Append(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Append.create = function (value0) {
        return function (value1) {
            return new Append(value0, value1);
        };
    };
    function AddAttribute(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    AddAttribute.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new AddAttribute(value0, value1, value2);
            };
        };
    };
    function Empty() {

    };
    Empty.value = new Empty();
    var Attribute = {
        create: function (value) {
            return value;
        }
    };
    function Attributable($bang) {
        this["!"] = $bang;
    };
    function slightlyUnsafeCoerce(a) {return a;};
    
  function horriblyUnsafeBindP(Append) {
    return function(ma) {
      return function(f) {
        return Append(ma)(f(function() {}));
      }
    }
  }
;
    var $bang = function (dict) {
        return dict["!"];
    };
    var text = function (s) {
        return new Content(s);
    };
    var horriblyUnsafeBind = horriblyUnsafeBindP(Append.create);
    var functorMarkupM = new Prelude.Functor(function (_228) {
        return slightlyUnsafeCoerce;
    });
    var attribute = function (key) {
        return function (value) {
            return AddAttribute.create(key)(value);
        };
    };
    var attributableMarkupMF = new Attributable(function (_234) {
        return function (_235) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_235)(_234);
        };
    });
    var attributableMarkupM = new Attributable(function (_232) {
        return function (_233) {
            return _233(_232);
        };
    });
    var monadMarkupM = new Prelude.Monad(function () {
        return applicativeMarkupM;
    }, function () {
        return bindMarkupM;
    });
    var bindMarkupM = new Prelude.Bind(horriblyUnsafeBind, function () {
        return applyMarkupM;
    });
    var applyMarkupM = new Prelude.Apply(Prelude.ap(monadMarkupM), function () {
        return functorMarkupM;
    });
    var applicativeMarkupM = new Prelude.Applicative(function () {
        return applyMarkupM;
    }, function (_229) {
        return Empty.value;
    });
    return {
        "!": $bang, 
        AddAttribute: AddAttribute, 
        Append: Append, 
        Attributable: Attributable, 
        Attribute: Attribute, 
        Content: Content, 
        Empty: Empty, 
        Leaf: Leaf, 
        Parent: Parent, 
        applicativeMarkupM: applicativeMarkupM, 
        applyMarkupM: applyMarkupM, 
        attributableMarkupM: attributableMarkupM, 
        attributableMarkupMF: attributableMarkupMF, 
        attribute: attribute, 
        bindMarkupM: bindMarkupM, 
        functorMarkupM: functorMarkupM, 
        monadMarkupM: monadMarkupM, 
        text: text
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var p = Text_Smolder_Markup.Parent.create("p");
    var input = new Text_Smolder_Markup.Leaf("input");
    var h2 = Text_Smolder_Markup.Parent.create("h2");
    var div = Text_Smolder_Markup.Parent.create("div");
    return {
        div: div, 
        h2: h2, 
        input: input, 
        p: p
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML_Attributes = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var type$prime = Text_Smolder_Markup.attribute("type");
    var className = Text_Smolder_Markup.attribute("class");
    return {
        className: className, 
        "type'": type$prime
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var foldableArray = new Foldable(function (__dict_Monoid_113) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_113["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_113))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    return {
        Foldable: Foldable, 
        foldableArray: foldableArray, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Element = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function Element(children, classAdd, classContains, classRemove, classToggle, contentWindow, getAttribute, getElementById, getElementsByClassName, getElementsByName, hasAttribute, innerHTML, querySelector, querySelectorAll, removeAttribute, setAttribute, setInnerHTML, setTextContent, setValue, textContent, value) {
        this.children = children;
        this.classAdd = classAdd;
        this.classContains = classContains;
        this.classRemove = classRemove;
        this.classToggle = classToggle;
        this.contentWindow = contentWindow;
        this.getAttribute = getAttribute;
        this.getElementById = getElementById;
        this.getElementsByClassName = getElementsByClassName;
        this.getElementsByName = getElementsByName;
        this.hasAttribute = hasAttribute;
        this.innerHTML = innerHTML;
        this.querySelector = querySelector;
        this.querySelectorAll = querySelectorAll;
        this.removeAttribute = removeAttribute;
        this.setAttribute = setAttribute;
        this.setInnerHTML = setInnerHTML;
        this.setTextContent = setTextContent;
        this.setValue = setValue;
        this.textContent = textContent;
        this.value = value;
    };
    var value = function (dict) {
        return dict.value;
    };
    var setValue = function (dict) {
        return dict.setValue;
    };
    var setInnerHTML = function (dict) {
        return dict.setInnerHTML;
    };
    var setAttribute = function (dict) {
        return dict.setAttribute;
    };
    var querySelector = function (dict) {
        return dict.querySelector;
    };
    var htmlElement = new Element(Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_DOM_Simple_Unsafe_Utils.ensure)(Prelude["return"](Control_Monad_Eff.monadEff)));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, function (sel) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_DOM_Simple_Unsafe_Utils.ensure)(Prelude["return"](Control_Monad_Eff.monadEff)));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
    var focus = Data_DOM_Simple_Unsafe_Element.unsafeFocus;
    return {
        Element: Element, 
        focus: focus, 
        htmlElement: htmlElement, 
        querySelector: querySelector, 
        setAttribute: setAttribute, 
        setInnerHTML: setInnerHTML, 
        setValue: setValue, 
        value: value
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Document = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Data_DOM_Simple_Unsafe_Document = PS.Data_DOM_Simple_Unsafe_Document;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var htmlDocumentElement = new Data_DOM_Simple_Element.Element(Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, function (sel) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
    return {
        htmlDocumentElement: htmlDocumentElement
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    return {
        count: count, 
        drop: drop, 
        dropWhile: dropWhile, 
        joinWith: joinWith, 
        length: length, 
        take: take
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Window = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Window = PS.Data_DOM_Simple_Unsafe_Window;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var Prelude = PS.Prelude;
    function Window(clearTimeout, document, innerHeight, innerWidth, location, setInterval, setTimeout) {
        this.clearTimeout = clearTimeout;
        this.document = document;
        this.innerHeight = innerHeight;
        this.innerWidth = innerWidth;
        this.location = location;
        this.setInterval = setInterval;
        this.setTimeout = setTimeout;
    };
    var globalWindow = window;;
    var innerHeight = function (dict) {
        return dict.innerHeight;
    };
    var htmlWindow = new Window(Data_DOM_Simple_Unsafe_Window.unsafeClearTimeout, Data_DOM_Simple_Unsafe_Window.unsafeDocument, Data_DOM_Simple_Unsafe_Window.unsafeInnerHeight, Data_DOM_Simple_Unsafe_Window.unsafeInnerWidth, Data_DOM_Simple_Unsafe_Window.unsafeLocation, Data_DOM_Simple_Unsafe_Window.unsafeSetInterval, Data_DOM_Simple_Unsafe_Window.unsafeSetTimeout);
    var document = function (dict) {
        return dict.document;
    };
    return {
        Window: Window, 
        document: document, 
        globalWindow: globalWindow, 
        htmlWindow: htmlWindow, 
        innerHeight: innerHeight
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Events = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Events = PS.Data_DOM_Simple_Unsafe_Events;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function LoadEvent() {

    };
    LoadEvent.value = new LoadEvent();
    function UnloadEvent() {

    };
    UnloadEvent.value = new UnloadEvent();
    function AbortEvent() {

    };
    AbortEvent.value = new AbortEvent();
    function ErrorEvent() {

    };
    ErrorEvent.value = new ErrorEvent();
    function SelectEvent() {

    };
    SelectEvent.value = new SelectEvent();
    function ResizeEvent() {

    };
    ResizeEvent.value = new ResizeEvent();
    function ScrollEvent() {

    };
    ScrollEvent.value = new ScrollEvent();
    function KeydownEvent() {

    };
    KeydownEvent.value = new KeydownEvent();
    function KeypressEvent() {

    };
    KeypressEvent.value = new KeypressEvent();
    function KeyupEvent() {

    };
    KeyupEvent.value = new KeyupEvent();
    function KeyLocationStandard() {

    };
    KeyLocationStandard.value = new KeyLocationStandard();
    function KeyLocationLeft() {

    };
    KeyLocationLeft.value = new KeyLocationLeft();
    function KeyLocationRight() {

    };
    KeyLocationRight.value = new KeyLocationRight();
    function KeyLocationNumpad() {

    };
    KeyLocationNumpad.value = new KeyLocationNumpad();
    function Read(read) {
        this.read = read;
    };
    function Event(eventTarget, preventDefault, stopPropagation) {
        this.eventTarget = eventTarget;
        this.preventDefault = preventDefault;
        this.stopPropagation = stopPropagation;
    };
    function KeyboardEvent(__superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0, altKey, ctrlKey, key, keyCode, keyLocation, keyboardEventType, metaKey, shiftKey) {
        this["__superclass_Data.DOM.Simple.Events.Event_0"] = __superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0;
        this.altKey = altKey;
        this.ctrlKey = ctrlKey;
        this.key = key;
        this.keyCode = keyCode;
        this.keyLocation = keyLocation;
        this.keyboardEventType = keyboardEventType;
        this.metaKey = metaKey;
        this.shiftKey = shiftKey;
    };
    function KeyboardEventTarget(addKeyboardEventListener, removeKeyboardEventListener) {
        this.addKeyboardEventListener = addKeyboardEventListener;
        this.removeKeyboardEventListener = removeKeyboardEventListener;
    };
    function UIEvent(__superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0, detail, view) {
        this["__superclass_Data.DOM.Simple.Events.Event_0"] = __superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0;
        this.detail = detail;
        this.view = view;
    };
    function UIEventTarget(addUIEventListener, removeUIEventListener) {
        this.addUIEventListener = addUIEventListener;
        this.removeUIEventListener = removeUIEventListener;
    };
    var uiEventTypeShow = new Prelude.Show(function (_307) {
        if (_307 instanceof LoadEvent) {
            return "load";
        };
        if (_307 instanceof UnloadEvent) {
            return "unload";
        };
        if (_307 instanceof AbortEvent) {
            return "abort";
        };
        if (_307 instanceof ErrorEvent) {
            return "error";
        };
        if (_307 instanceof SelectEvent) {
            return "select";
        };
        if (_307 instanceof ResizeEvent) {
            return "resize";
        };
        if (_307 instanceof ScrollEvent) {
            return "scroll";
        };
        throw new Error("Failed pattern match");
    });
    var uiEventTargetHTMLWindow = new UIEventTarget(function (__dict_UIEvent_133) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeAddEventListener(Prelude.show(uiEventTypeShow)(typ));
        };
    }, function (__dict_UIEvent_134) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeRemoveEventListener(Prelude.show(uiEventTypeShow)(typ));
        };
    });
    var toKeyLocation = function (_302) {
        if (_302 === 0) {
            return KeyLocationStandard.value;
        };
        if (_302 === 1) {
            return KeyLocationLeft.value;
        };
        if (_302 === 2) {
            return KeyLocationRight.value;
        };
        if (_302 === 3) {
            return KeyLocationNumpad.value;
        };
        throw new Error("Failed pattern match");
    };
    var read = function (dict) {
        return dict.read;
    };
    var keyboardEventTypeShow = new Prelude.Show(function (_305) {
        if (_305 instanceof KeydownEvent) {
            return "keydown";
        };
        if (_305 instanceof KeypressEvent) {
            return "keypress";
        };
        if (_305 instanceof KeyupEvent) {
            return "keyup";
        };
        throw new Error("Failed pattern match");
    });
    var keyboardEventTypeRead = new Read(function (_306) {
        if (_306 === "keydown") {
            return KeydownEvent.value;
        };
        if (_306 === "keypress") {
            return KeypressEvent.value;
        };
        if (_306 === "keyup") {
            return KeyupEvent.value;
        };
        throw new Error("Failed pattern match");
    });
    var keyboardEventTargetHTMLWindow = new KeyboardEventTarget(function (__dict_KeyboardEvent_141) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeAddEventListener(Prelude.show(keyboardEventTypeShow)(typ));
        };
    }, function (__dict_KeyboardEvent_142) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeRemoveEventListener(Prelude.show(keyboardEventTypeShow)(typ));
        };
    });
    var keyCode = function (dict) {
        return dict.keyCode;
    };
    var key = function (dict) {
        return dict.key;
    };
    var eventDOMEvent = new Event(Data_DOM_Simple_Unsafe_Events.unsafeEventTarget, Data_DOM_Simple_Unsafe_Events.unsafePreventDefault, Data_DOM_Simple_Unsafe_Events.unsafeStopPropagation);
    var keyboardEventDOMEvent = new KeyboardEvent(function () {
        return eventDOMEvent;
    }, Data_DOM_Simple_Unsafe_Events.unsafeEventBooleanProp("altKey"), Data_DOM_Simple_Unsafe_Events.unsafeEventBooleanProp("ctrlKey"), Data_DOM_Simple_Unsafe_Events.unsafeEventKey, Data_DOM_Simple_Unsafe_Events.unsafeEventKeyCode, function (ev) {
        return Prelude["<$>"](Control_Monad_Eff.functorEff)(toKeyLocation)(Data_DOM_Simple_Unsafe_Events.unsafeEventNumberProp("keyLocation")(ev));
    }, function (ev) {
        return Prelude["<$>"](Control_Monad_Eff.functorEff)(read(keyboardEventTypeRead))(Data_DOM_Simple_Unsafe_Events.unsafeEventStringProp("type")(ev));
    }, Data_DOM_Simple_Unsafe_Events.unsafeEventBooleanProp("metaKey"), Data_DOM_Simple_Unsafe_Events.unsafeEventBooleanProp("shiftKey"));
    var uiEventDOMEvent = new UIEvent(function () {
        return eventDOMEvent;
    }, Data_DOM_Simple_Unsafe_Events.unsafeEventNumberProp("detail"), Data_DOM_Simple_Unsafe_Events.unsafeEventView);
    var addUIEventListener = function (dict) {
        return dict.addUIEventListener;
    };
    var addKeyboardEventListener = function (dict) {
        return dict.addKeyboardEventListener;
    };
    return {
        AbortEvent: AbortEvent, 
        ErrorEvent: ErrorEvent, 
        Event: Event, 
        KeyLocationLeft: KeyLocationLeft, 
        KeyLocationNumpad: KeyLocationNumpad, 
        KeyLocationRight: KeyLocationRight, 
        KeyLocationStandard: KeyLocationStandard, 
        KeyboardEvent: KeyboardEvent, 
        KeyboardEventTarget: KeyboardEventTarget, 
        KeydownEvent: KeydownEvent, 
        KeypressEvent: KeypressEvent, 
        KeyupEvent: KeyupEvent, 
        LoadEvent: LoadEvent, 
        Read: Read, 
        ResizeEvent: ResizeEvent, 
        ScrollEvent: ScrollEvent, 
        SelectEvent: SelectEvent, 
        UIEvent: UIEvent, 
        UIEventTarget: UIEventTarget, 
        UnloadEvent: UnloadEvent, 
        addKeyboardEventListener: addKeyboardEventListener, 
        addUIEventListener: addUIEventListener, 
        eventDOMEvent: eventDOMEvent, 
        key: key, 
        keyCode: keyCode, 
        keyboardEventDOMEvent: keyboardEventDOMEvent, 
        keyboardEventTargetHTMLWindow: keyboardEventTargetHTMLWindow, 
        keyboardEventTypeRead: keyboardEventTypeRead, 
        keyboardEventTypeShow: keyboardEventTypeShow, 
        read: read, 
        toKeyLocation: toKeyLocation, 
        uiEventDOMEvent: uiEventDOMEvent, 
        uiEventTargetHTMLWindow: uiEventTargetHTMLWindow, 
        uiEventTypeShow: uiEventTypeShow
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    function Leaf() {

    };
    Leaf.value = new Leaf();
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    var values = function (_334) {
        if (_334 instanceof Leaf) {
            return [  ];
        };
        if (_334 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_334.value0))(Prelude["++"](Data_Array.semigroupArray)([ _334.value2 ])(values(_334.value3)));
        };
        if (_334 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_334.value0))(Prelude["++"](Data_Array.semigroupArray)([ _334.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_334.value3))(Prelude["++"](Data_Array.semigroupArray)([ _334.value5 ])(values(_334.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_332) {
        if (_332 instanceof Leaf) {
            return [  ];
        };
        if (_332 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_332.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_332.value1, _332.value2) ])(toList(_332.value3)));
        };
        if (_332 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_332.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_332.value1, _332.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_332.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_332.value4, _332.value5) ])(toList(_332.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var lookup = function (__copy___dict_Ord_164) {
        return function (__copy__328) {
            return function (__copy__329) {
                var __dict_Ord_164 = __copy___dict_Ord_164;
                var _328 = __copy__328;
                var _329 = __copy__329;
                tco: while (true) {
                    if (_329 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_329 instanceof Two && Prelude["=="](__dict_Ord_164["__superclass_Prelude.Eq_0"]())(_328)(_329.value1)) {
                        return new Data_Maybe.Just(_329.value2);
                    };
                    if (_329 instanceof Two && Prelude["<"](__dict_Ord_164)(_328)(_329.value1)) {
                        var __tco___dict_Ord_164 = __dict_Ord_164;
                        var __tco__328 = _328;
                        var __tco__329 = _329.value0;
                        __dict_Ord_164 = __tco___dict_Ord_164;
                        _328 = __tco__328;
                        _329 = __tco__329;
                        continue tco;
                    };
                    if (_329 instanceof Two) {
                        var __tco___dict_Ord_164 = __dict_Ord_164;
                        var __tco__328 = _328;
                        var __tco__329 = _329.value3;
                        __dict_Ord_164 = __tco___dict_Ord_164;
                        _328 = __tco__328;
                        _329 = __tco__329;
                        continue tco;
                    };
                    if (_329 instanceof Three && Prelude["=="](__dict_Ord_164["__superclass_Prelude.Eq_0"]())(_328)(_329.value1)) {
                        return new Data_Maybe.Just(_329.value2);
                    };
                    if (_329 instanceof Three && Prelude["=="](__dict_Ord_164["__superclass_Prelude.Eq_0"]())(_328)(_329.value4)) {
                        return new Data_Maybe.Just(_329.value5);
                    };
                    if (_329 instanceof Three && Prelude["<"](__dict_Ord_164)(_328)(_329.value1)) {
                        var __tco___dict_Ord_164 = __dict_Ord_164;
                        var __tco__328 = _328;
                        var __tco__329 = _329.value0;
                        __dict_Ord_164 = __tco___dict_Ord_164;
                        _328 = __tco__328;
                        _329 = __tco__329;
                        continue tco;
                    };
                    if (_329 instanceof Three && (Prelude["<"](__dict_Ord_164)(_329.value1)(_328) && Prelude["<="](__dict_Ord_164)(_328)(_329.value4))) {
                        var __tco___dict_Ord_164 = __dict_Ord_164;
                        var __tco__328 = _328;
                        var __tco__329 = _329.value3;
                        __dict_Ord_164 = __tco___dict_Ord_164;
                        _328 = __tco__328;
                        _329 = __tco__329;
                        continue tco;
                    };
                    if (_329 instanceof Three) {
                        var __tco___dict_Ord_164 = __dict_Ord_164;
                        var __tco__328 = _328;
                        var __tco__329 = _329.value6;
                        __dict_Ord_164 = __tco___dict_Ord_164;
                        _328 = __tco__328;
                        _329 = __tco__329;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_165) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_165)(k)(m));
            };
        };
    };
    var keys = function (_333) {
        if (_333 instanceof Leaf) {
            return [  ];
        };
        if (_333 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_333.value0))(Prelude["++"](Data_Array.semigroupArray)([ _333.value1 ])(keys(_333.value3)));
        };
        if (_333 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_333.value0))(Prelude["++"](Data_Array.semigroupArray)([ _333.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_333.value3))(Prelude["++"](Data_Array.semigroupArray)([ _333.value4 ])(keys(_333.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var fromZipper = function (__copy___dict_Ord_166) {
        return function (__copy__330) {
            return function (__copy__331) {
                var __dict_Ord_166 = __copy___dict_Ord_166;
                var _330 = __copy__330;
                var _331 = __copy__331;
                tco: while (true) {
                    if (_330.length === 0) {
                        return _331;
                    };
                    if (_330.length >= 1) {
                        var _591 = _330.slice(1);
                        if (_330[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_166 = __dict_Ord_166;
                            var __tco__331 = new Two(_331, (_330[0]).value0, (_330[0]).value1, (_330[0]).value2);
                            __dict_Ord_166 = __tco___dict_Ord_166;
                            _330 = _591;
                            _331 = __tco__331;
                            continue tco;
                        };
                    };
                    if (_330.length >= 1) {
                        var _596 = _330.slice(1);
                        if (_330[0] instanceof TwoRight) {
                            var __tco___dict_Ord_166 = __dict_Ord_166;
                            var __tco__331 = new Two((_330[0]).value0, (_330[0]).value1, (_330[0]).value2, _331);
                            __dict_Ord_166 = __tco___dict_Ord_166;
                            _330 = _596;
                            _331 = __tco__331;
                            continue tco;
                        };
                    };
                    if (_330.length >= 1) {
                        var _604 = _330.slice(1);
                        if (_330[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_166 = __dict_Ord_166;
                            var __tco__331 = new Three(_331, (_330[0]).value0, (_330[0]).value1, (_330[0]).value2, (_330[0]).value3, (_330[0]).value4, (_330[0]).value5);
                            __dict_Ord_166 = __tco___dict_Ord_166;
                            _330 = _604;
                            _331 = __tco__331;
                            continue tco;
                        };
                    };
                    if (_330.length >= 1) {
                        var _612 = _330.slice(1);
                        if (_330[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_166 = __dict_Ord_166;
                            var __tco__331 = new Three((_330[0]).value0, (_330[0]).value1, (_330[0]).value2, _331, (_330[0]).value3, (_330[0]).value4, (_330[0]).value5);
                            __dict_Ord_166 = __tco___dict_Ord_166;
                            _330 = _612;
                            _331 = __tco__331;
                            continue tco;
                        };
                    };
                    if (_330.length >= 1) {
                        var _620 = _330.slice(1);
                        if (_330[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_166 = __dict_Ord_166;
                            var __tco__331 = new Three((_330[0]).value0, (_330[0]).value1, (_330[0]).value2, (_330[0]).value3, (_330[0]).value4, (_330[0]).value5, _331);
                            __dict_Ord_166 = __tco___dict_Ord_166;
                            _330 = _620;
                            _331 = __tco__331;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_167) {
        var up = function (__copy___dict_Ord_168) {
            return function (__copy__342) {
                return function (__copy__343) {
                    var __dict_Ord_168 = __copy___dict_Ord_168;
                    var _342 = __copy__342;
                    var _343 = __copy__343;
                    tco: while (true) {
                        if (_342.length === 0) {
                            return new Two(_343.value0, _343.value1, _343.value2, _343.value3);
                        };
                        if (_342.length >= 1) {
                            var _635 = _342.slice(1);
                            if (_342[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_168)(_635)(new Three(_343.value0, _343.value1, _343.value2, _343.value3, (_342[0]).value0, (_342[0]).value1, (_342[0]).value2));
                            };
                        };
                        if (_342.length >= 1) {
                            var _644 = _342.slice(1);
                            if (_342[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_168)(_644)(new Three((_342[0]).value0, (_342[0]).value1, (_342[0]).value2, _343.value0, _343.value1, _343.value2, _343.value3));
                            };
                        };
                        if (_342.length >= 1) {
                            var _656 = _342.slice(1);
                            if (_342[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_168 = __dict_Ord_168;
                                var __tco__343 = new KickUp(new Two(_343.value0, _343.value1, _343.value2, _343.value3), (_342[0]).value0, (_342[0]).value1, new Two((_342[0]).value2, (_342[0]).value3, (_342[0]).value4, (_342[0]).value5));
                                __dict_Ord_168 = __tco___dict_Ord_168;
                                _342 = _656;
                                _343 = __tco__343;
                                continue tco;
                            };
                        };
                        if (_342.length >= 1) {
                            var _668 = _342.slice(1);
                            if (_342[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_168 = __dict_Ord_168;
                                var __tco__343 = new KickUp(new Two((_342[0]).value0, (_342[0]).value1, (_342[0]).value2, _343.value0), _343.value1, _343.value2, new Two(_343.value3, (_342[0]).value3, (_342[0]).value4, (_342[0]).value5));
                                __dict_Ord_168 = __tco___dict_Ord_168;
                                _342 = _668;
                                _343 = __tco__343;
                                continue tco;
                            };
                        };
                        if (_342.length >= 1) {
                            var _680 = _342.slice(1);
                            if (_342[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_168 = __dict_Ord_168;
                                var __tco__343 = new KickUp(new Two((_342[0]).value0, (_342[0]).value1, (_342[0]).value2, (_342[0]).value3), (_342[0]).value4, (_342[0]).value5, new Two(_343.value0, _343.value1, _343.value2, _343.value3));
                                __dict_Ord_168 = __tco___dict_Ord_168;
                                _342 = _680;
                                _343 = __tco__343;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_169) {
            return function (__copy__338) {
                return function (__copy__339) {
                    return function (__copy__340) {
                        return function (__copy__341) {
                            var __dict_Ord_169 = __copy___dict_Ord_169;
                            var _338 = __copy__338;
                            var _339 = __copy__339;
                            var _340 = __copy__340;
                            var _341 = __copy__341;
                            tco: while (true) {
                                if (_341 instanceof Leaf) {
                                    return up(__dict_Ord_169)(_338)(new KickUp(Leaf.value, _339, _340, Leaf.value));
                                };
                                if (_341 instanceof Two && Prelude["=="](__dict_Ord_169["__superclass_Prelude.Eq_0"]())(_339)(_341.value1)) {
                                    return fromZipper(__dict_Ord_169)(_338)(new Two(_341.value0, _339, _340, _341.value3));
                                };
                                if (_341 instanceof Two && Prelude["<"](__dict_Ord_169)(_339)(_341.value1)) {
                                    var __tco___dict_Ord_169 = __dict_Ord_169;
                                    var __tco__338 = Prelude[":"](new TwoLeft(_341.value1, _341.value2, _341.value3))(_338);
                                    var __tco__339 = _339;
                                    var __tco__340 = _340;
                                    var __tco__341 = _341.value0;
                                    __dict_Ord_169 = __tco___dict_Ord_169;
                                    _338 = __tco__338;
                                    _339 = __tco__339;
                                    _340 = __tco__340;
                                    _341 = __tco__341;
                                    continue tco;
                                };
                                if (_341 instanceof Two) {
                                    var __tco___dict_Ord_169 = __dict_Ord_169;
                                    var __tco__338 = Prelude[":"](new TwoRight(_341.value0, _341.value1, _341.value2))(_338);
                                    var __tco__339 = _339;
                                    var __tco__340 = _340;
                                    var __tco__341 = _341.value3;
                                    __dict_Ord_169 = __tco___dict_Ord_169;
                                    _338 = __tco__338;
                                    _339 = __tco__339;
                                    _340 = __tco__340;
                                    _341 = __tco__341;
                                    continue tco;
                                };
                                if (_341 instanceof Three && Prelude["=="](__dict_Ord_169["__superclass_Prelude.Eq_0"]())(_339)(_341.value1)) {
                                    return fromZipper(__dict_Ord_169)(_338)(new Three(_341.value0, _339, _340, _341.value3, _341.value4, _341.value5, _341.value6));
                                };
                                if (_341 instanceof Three && Prelude["=="](__dict_Ord_169["__superclass_Prelude.Eq_0"]())(_339)(_341.value4)) {
                                    return fromZipper(__dict_Ord_169)(_338)(new Three(_341.value0, _341.value1, _341.value2, _341.value3, _339, _340, _341.value6));
                                };
                                if (_341 instanceof Three && Prelude["<"](__dict_Ord_169)(_339)(_341.value1)) {
                                    var __tco___dict_Ord_169 = __dict_Ord_169;
                                    var __tco__338 = Prelude[":"](new ThreeLeft(_341.value1, _341.value2, _341.value3, _341.value4, _341.value5, _341.value6))(_338);
                                    var __tco__339 = _339;
                                    var __tco__340 = _340;
                                    var __tco__341 = _341.value0;
                                    __dict_Ord_169 = __tco___dict_Ord_169;
                                    _338 = __tco__338;
                                    _339 = __tco__339;
                                    _340 = __tco__340;
                                    _341 = __tco__341;
                                    continue tco;
                                };
                                if (_341 instanceof Three && (Prelude["<"](__dict_Ord_169)(_341.value1)(_339) && Prelude["<="](__dict_Ord_169)(_339)(_341.value4))) {
                                    var __tco___dict_Ord_169 = __dict_Ord_169;
                                    var __tco__338 = Prelude[":"](new ThreeMiddle(_341.value0, _341.value1, _341.value2, _341.value4, _341.value5, _341.value6))(_338);
                                    var __tco__339 = _339;
                                    var __tco__340 = _340;
                                    var __tco__341 = _341.value3;
                                    __dict_Ord_169 = __tco___dict_Ord_169;
                                    _338 = __tco__338;
                                    _339 = __tco__339;
                                    _340 = __tco__340;
                                    _341 = __tco__341;
                                    continue tco;
                                };
                                if (_341 instanceof Three) {
                                    var __tco___dict_Ord_169 = __dict_Ord_169;
                                    var __tco__338 = Prelude[":"](new ThreeRight(_341.value0, _341.value1, _341.value2, _341.value3, _341.value4, _341.value5))(_338);
                                    var __tco__339 = _339;
                                    var __tco__340 = _340;
                                    var __tco__341 = _341.value6;
                                    __dict_Ord_169 = __tco___dict_Ord_169;
                                    _338 = __tco__338;
                                    _339 = __tco__339;
                                    _340 = __tco__340;
                                    _341 = __tco__341;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_167)([  ]);
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_174) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_324) {
                return insert(__dict_Ord_174)(_324.value0)(_324.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_179) {
        var up = function (__copy___dict_Ord_180) {
            return function (__copy__347) {
                return function (__copy__348) {
                    var __dict_Ord_180 = __copy___dict_Ord_180;
                    var _347 = __copy__347;
                    var _348 = __copy__348;
                    tco: while (true) {
                        if (_347.length === 0) {
                            return _348;
                        };
                        if (_347.length >= 1) {
                            var _741 = _347.slice(1);
                            if (_347[0] instanceof TwoLeft && ((_347[0]).value2 instanceof Leaf && _348 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_180)(_741)(new Two(Leaf.value, (_347[0]).value0, (_347[0]).value1, Leaf.value));
                            };
                        };
                        if (_347.length >= 1) {
                            var _746 = _347.slice(1);
                            if (_347[0] instanceof TwoRight && ((_347[0]).value0 instanceof Leaf && _348 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_180)(_746)(new Two(Leaf.value, (_347[0]).value1, (_347[0]).value2, Leaf.value));
                            };
                        };
                        if (_347.length >= 1) {
                            var _755 = _347.slice(1);
                            if (_347[0] instanceof TwoLeft && (_347[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_180 = __dict_Ord_180;
                                var __tco__348 = new Three(_348, (_347[0]).value0, (_347[0]).value1, (_347[0]).value2.value0, (_347[0]).value2.value1, (_347[0]).value2.value2, (_347[0]).value2.value3);
                                __dict_Ord_180 = __tco___dict_Ord_180;
                                _347 = _755;
                                _348 = __tco__348;
                                continue tco;
                            };
                        };
                        if (_347.length >= 1) {
                            var _764 = _347.slice(1);
                            if (_347[0] instanceof TwoRight && (_347[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_180 = __dict_Ord_180;
                                var __tco__348 = new Three((_347[0]).value0.value0, (_347[0]).value0.value1, (_347[0]).value0.value2, (_347[0]).value0.value3, (_347[0]).value1, (_347[0]).value2, _348);
                                __dict_Ord_180 = __tco___dict_Ord_180;
                                _347 = _764;
                                _348 = __tco__348;
                                continue tco;
                            };
                        };
                        if (_347.length >= 1) {
                            var _776 = _347.slice(1);
                            if (_347[0] instanceof TwoLeft && (_347[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_776)(new Two(new Two(_348, (_347[0]).value0, (_347[0]).value1, (_347[0]).value2.value0), (_347[0]).value2.value1, (_347[0]).value2.value2, new Two((_347[0]).value2.value3, (_347[0]).value2.value4, (_347[0]).value2.value5, (_347[0]).value2.value6)));
                            };
                        };
                        if (_347.length >= 1) {
                            var _788 = _347.slice(1);
                            if (_347[0] instanceof TwoRight && (_347[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_788)(new Two(new Two((_347[0]).value0.value0, (_347[0]).value0.value1, (_347[0]).value0.value2, (_347[0]).value0.value3), (_347[0]).value0.value4, (_347[0]).value0.value5, new Two((_347[0]).value0.value6, (_347[0]).value1, (_347[0]).value2, _348)));
                            };
                        };
                        if (_347.length >= 1) {
                            var _796 = _347.slice(1);
                            if (_347[0] instanceof ThreeLeft && ((_347[0]).value2 instanceof Leaf && ((_347[0]).value5 instanceof Leaf && _348 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_180)(_796)(new Three(Leaf.value, (_347[0]).value0, (_347[0]).value1, Leaf.value, (_347[0]).value3, (_347[0]).value4, Leaf.value));
                            };
                        };
                        if (_347.length >= 1) {
                            var _804 = _347.slice(1);
                            if (_347[0] instanceof ThreeMiddle && ((_347[0]).value0 instanceof Leaf && ((_347[0]).value5 instanceof Leaf && _348 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_180)(_804)(new Three(Leaf.value, (_347[0]).value1, (_347[0]).value2, Leaf.value, (_347[0]).value3, (_347[0]).value4, Leaf.value));
                            };
                        };
                        if (_347.length >= 1) {
                            var _812 = _347.slice(1);
                            if (_347[0] instanceof ThreeRight && ((_347[0]).value0 instanceof Leaf && ((_347[0]).value3 instanceof Leaf && _348 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_180)(_812)(new Three(Leaf.value, (_347[0]).value1, (_347[0]).value2, Leaf.value, (_347[0]).value4, (_347[0]).value5, Leaf.value));
                            };
                        };
                        if (_347.length >= 1) {
                            var _824 = _347.slice(1);
                            if (_347[0] instanceof ThreeLeft && (_347[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_180)(_824)(new Two(new Three(_348, (_347[0]).value0, (_347[0]).value1, (_347[0]).value2.value0, (_347[0]).value2.value1, (_347[0]).value2.value2, (_347[0]).value2.value3), (_347[0]).value3, (_347[0]).value4, (_347[0]).value5));
                            };
                        };
                        if (_347.length >= 1) {
                            var _836 = _347.slice(1);
                            if (_347[0] instanceof ThreeMiddle && (_347[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_180)(_836)(new Two(new Three((_347[0]).value0.value0, (_347[0]).value0.value1, (_347[0]).value0.value2, (_347[0]).value0.value3, (_347[0]).value1, (_347[0]).value2, _348), (_347[0]).value3, (_347[0]).value4, (_347[0]).value5));
                            };
                        };
                        if (_347.length >= 1) {
                            var _848 = _347.slice(1);
                            if (_347[0] instanceof ThreeMiddle && (_347[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_180)(_848)(new Two((_347[0]).value0, (_347[0]).value1, (_347[0]).value2, new Three(_348, (_347[0]).value3, (_347[0]).value4, (_347[0]).value5.value0, (_347[0]).value5.value1, (_347[0]).value5.value2, (_347[0]).value5.value3)));
                            };
                        };
                        if (_347.length >= 1) {
                            var _860 = _347.slice(1);
                            if (_347[0] instanceof ThreeRight && (_347[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_180)(_860)(new Two((_347[0]).value0, (_347[0]).value1, (_347[0]).value2, new Three((_347[0]).value3.value0, (_347[0]).value3.value1, (_347[0]).value3.value2, (_347[0]).value3.value3, (_347[0]).value4, (_347[0]).value5, _348)));
                            };
                        };
                        if (_347.length >= 1) {
                            var _875 = _347.slice(1);
                            if (_347[0] instanceof ThreeLeft && (_347[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_875)(new Three(new Two(_348, (_347[0]).value0, (_347[0]).value1, (_347[0]).value2.value0), (_347[0]).value2.value1, (_347[0]).value2.value2, new Two((_347[0]).value2.value3, (_347[0]).value2.value4, (_347[0]).value2.value5, (_347[0]).value2.value6), (_347[0]).value3, (_347[0]).value4, (_347[0]).value5));
                            };
                        };
                        if (_347.length >= 1) {
                            var _890 = _347.slice(1);
                            if (_347[0] instanceof ThreeMiddle && (_347[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_890)(new Three(new Two((_347[0]).value0.value0, (_347[0]).value0.value1, (_347[0]).value0.value2, (_347[0]).value0.value3), (_347[0]).value0.value4, (_347[0]).value0.value5, new Two((_347[0]).value0.value6, (_347[0]).value1, (_347[0]).value2, _348), (_347[0]).value3, (_347[0]).value4, (_347[0]).value5));
                            };
                        };
                        if (_347.length >= 1) {
                            var _905 = _347.slice(1);
                            if (_347[0] instanceof ThreeMiddle && (_347[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_905)(new Three((_347[0]).value0, (_347[0]).value1, (_347[0]).value2, new Two(_348, (_347[0]).value3, (_347[0]).value4, (_347[0]).value5.value0), (_347[0]).value5.value1, (_347[0]).value5.value2, new Two((_347[0]).value5.value3, (_347[0]).value5.value4, (_347[0]).value5.value5, (_347[0]).value5.value6)));
                            };
                        };
                        if (_347.length >= 1) {
                            var _920 = _347.slice(1);
                            if (_347[0] instanceof ThreeRight && (_347[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_180)(_920)(new Three((_347[0]).value0, (_347[0]).value1, (_347[0]).value2, new Two((_347[0]).value3.value0, (_347[0]).value3.value1, (_347[0]).value3.value2, (_347[0]).value3.value3), (_347[0]).value3.value4, (_347[0]).value3.value5, new Two((_347[0]).value3.value6, (_347[0]).value4, (_347[0]).value5, _348)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_181) {
            return function (__copy__350) {
                return function (__copy__351) {
                    var __dict_Ord_181 = __copy___dict_Ord_181;
                    var _350 = __copy__350;
                    var _351 = __copy__351;
                    tco: while (true) {
                        if (_351 instanceof Two && (_351.value0 instanceof Leaf && _351.value3 instanceof Leaf)) {
                            return up(__dict_Ord_181)(_350)(Leaf.value);
                        };
                        if (_351 instanceof Two) {
                            var __tco___dict_Ord_181 = __dict_Ord_181;
                            var __tco__350 = Prelude[":"](new TwoRight(_351.value0, _351.value1, _351.value2))(_350);
                            var __tco__351 = _351.value3;
                            __dict_Ord_181 = __tco___dict_Ord_181;
                            _350 = __tco__350;
                            _351 = __tco__351;
                            continue tco;
                        };
                        if (_351 instanceof Three && (_351.value0 instanceof Leaf && (_351.value3 instanceof Leaf && _351.value6 instanceof Leaf))) {
                            return up(__dict_Ord_181)(Prelude[":"](new TwoRight(Leaf.value, _351.value1, _351.value2))(_350))(Leaf.value);
                        };
                        if (_351 instanceof Three) {
                            var __tco___dict_Ord_181 = __dict_Ord_181;
                            var __tco__350 = Prelude[":"](new ThreeRight(_351.value0, _351.value1, _351.value2, _351.value3, _351.value4, _351.value5))(_350);
                            var __tco__351 = _351.value6;
                            __dict_Ord_181 = __tco___dict_Ord_181;
                            _350 = __tco__350;
                            _351 = __tco__351;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_182) {
            return function (__copy__349) {
                var __dict_Ord_182 = __copy___dict_Ord_182;
                var _349 = __copy__349;
                tco: while (true) {
                    if (_349 instanceof Two && _349.value3 instanceof Leaf) {
                        return {
                            key: _349.value1, 
                            value: _349.value2
                        };
                    };
                    if (_349 instanceof Two) {
                        var __tco___dict_Ord_182 = __dict_Ord_182;
                        var __tco__349 = _349.value3;
                        __dict_Ord_182 = __tco___dict_Ord_182;
                        _349 = __tco__349;
                        continue tco;
                    };
                    if (_349 instanceof Three && _349.value6 instanceof Leaf) {
                        return {
                            key: _349.value4, 
                            value: _349.value5
                        };
                    };
                    if (_349 instanceof Three) {
                        var __tco___dict_Ord_182 = __dict_Ord_182;
                        var __tco__349 = _349.value6;
                        __dict_Ord_182 = __tco___dict_Ord_182;
                        _349 = __tco__349;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_183) {
            return function (__copy__344) {
                return function (__copy__345) {
                    return function (__copy__346) {
                        var __dict_Ord_183 = __copy___dict_Ord_183;
                        var _344 = __copy__344;
                        var _345 = __copy__345;
                        var _346 = __copy__346;
                        tco: while (true) {
                            if (_346 instanceof Leaf) {
                                return fromZipper(__dict_Ord_183)(_344)(Leaf.value);
                            };
                            if (_346 instanceof Two && (_346.value0 instanceof Leaf && (_346.value3 instanceof Leaf && Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value1)))) {
                                return up(__dict_Ord_183)(_344)(Leaf.value);
                            };
                            if (_346 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value1)) {
                                    var max = maxNode(__dict_Ord_183)(_346.value0);
                                    return removeMaxNode(__dict_Ord_183)(Prelude[":"](new TwoLeft(max.key, max.value, _346.value3))(_344))(_346.value0);
                                };
                                if (Prelude["<"](__dict_Ord_183)(_345)(_346.value1)) {
                                    var __tco___dict_Ord_183 = __dict_Ord_183;
                                    var __tco__344 = Prelude[":"](new TwoLeft(_346.value1, _346.value2, _346.value3))(_344);
                                    var __tco__345 = _345;
                                    var __tco__346 = _346.value0;
                                    __dict_Ord_183 = __tco___dict_Ord_183;
                                    _344 = __tco__344;
                                    _345 = __tco__345;
                                    _346 = __tco__346;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_183 = __dict_Ord_183;
                                    var __tco__344 = Prelude[":"](new TwoRight(_346.value0, _346.value1, _346.value2))(_344);
                                    var __tco__345 = _345;
                                    var __tco__346 = _346.value3;
                                    __dict_Ord_183 = __tco___dict_Ord_183;
                                    _344 = __tco__344;
                                    _345 = __tco__345;
                                    _346 = __tco__346;
                                    continue tco;
                                };
                            };
                            if (_346 instanceof Three && (_346.value0 instanceof Leaf && (_346.value3 instanceof Leaf && _346.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value1)) {
                                    return fromZipper(__dict_Ord_183)(_344)(new Two(Leaf.value, _346.value4, _346.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value4)) {
                                    return fromZipper(__dict_Ord_183)(_344)(new Two(Leaf.value, _346.value1, _346.value2, Leaf.value));
                                };
                            };
                            if (_346 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value1)) {
                                    var max = maxNode(__dict_Ord_183)(_346.value0);
                                    return removeMaxNode(__dict_Ord_183)(Prelude[":"](new ThreeLeft(max.key, max.value, _346.value3, _346.value4, _346.value5, _346.value6))(_344))(_346.value0);
                                };
                                if (Prelude["=="](__dict_Ord_183["__superclass_Prelude.Eq_0"]())(_345)(_346.value4)) {
                                    var max = maxNode(__dict_Ord_183)(_346.value3);
                                    return removeMaxNode(__dict_Ord_183)(Prelude[":"](new ThreeMiddle(_346.value0, _346.value1, _346.value2, max.key, max.value, _346.value6))(_344))(_346.value3);
                                };
                                if (Prelude["<"](__dict_Ord_183)(_345)(_346.value1)) {
                                    var __tco___dict_Ord_183 = __dict_Ord_183;
                                    var __tco__344 = Prelude[":"](new ThreeLeft(_346.value1, _346.value2, _346.value3, _346.value4, _346.value5, _346.value6))(_344);
                                    var __tco__345 = _345;
                                    var __tco__346 = _346.value0;
                                    __dict_Ord_183 = __tco___dict_Ord_183;
                                    _344 = __tco__344;
                                    _345 = __tco__345;
                                    _346 = __tco__346;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_183)(_346.value1)(_345) && Prelude["<"](__dict_Ord_183)(_345)(_346.value4)) {
                                    var __tco___dict_Ord_183 = __dict_Ord_183;
                                    var __tco__344 = Prelude[":"](new ThreeMiddle(_346.value0, _346.value1, _346.value2, _346.value4, _346.value5, _346.value6))(_344);
                                    var __tco__345 = _345;
                                    var __tco__346 = _346.value3;
                                    __dict_Ord_183 = __tco___dict_Ord_183;
                                    _344 = __tco__344;
                                    _345 = __tco__345;
                                    _346 = __tco__346;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_183 = __dict_Ord_183;
                                    var __tco__344 = Prelude[":"](new ThreeRight(_346.value0, _346.value1, _346.value2, _346.value3, _346.value4, _346.value5))(_344);
                                    var __tco__345 = _345;
                                    var __tco__346 = _346.value6;
                                    __dict_Ord_183 = __tco___dict_Ord_183;
                                    _344 = __tco__344;
                                    _345 = __tco__345;
                                    _346 = __tco__346;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_179)([  ]);
    };
    var alter = function (__dict_Ord_184) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _993 = f(lookup(__dict_Ord_184)(k)(m));
                    if (_993 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_184)(k)(m);
                    };
                    if (_993 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_184)(k)(_993.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        alter: alter, 
        "delete": $$delete, 
        empty: empty, 
        fromList: fromList, 
        insert: insert, 
        keys: keys, 
        lookup: lookup, 
        member: member, 
        toList: toList, 
        values: values
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_Util = (function () {
    "use strict";
    var Data_Map = PS.Data_Map;
    var Prelude = PS.Prelude;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array = PS.Data_Array;
    function Element(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Element.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Element(value0, value1, value2);
            };
        };
    };
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    var renderMarkup = function (_367) {
        if (_367 instanceof Text_Smolder_Markup.Parent) {
            return [ Element.create(_367.value0)(Data_Map.empty)(renderMarkup(_367.value1)) ];
        };
        if (_367 instanceof Text_Smolder_Markup.Leaf) {
            return [ new Element(_367.value0, Data_Map.empty, [  ]) ];
        };
        if (_367 instanceof Text_Smolder_Markup.Content) {
            return [ new Text(_367.value0) ];
        };
        if (_367 instanceof Text_Smolder_Markup.Append) {
            return Prelude["++"](Data_Array.semigroupArray)(renderMarkup(_367.value0))(renderMarkup(_367.value1));
        };
        if (_367 instanceof Text_Smolder_Markup.AddAttribute) {
            var _1002 = renderMarkup(_367.value2);
            if (_1002.length >= 1) {
                var _1007 = _1002.slice(1);
                if (_1002[0] instanceof Element) {
                    return Prelude["++"](Data_Array.semigroupArray)([ new Element((_1002[0]).value0, Data_Map.insert(Prelude.ordString)(_367.value0)(_367.value1)((_1002[0]).value1), (_1002[0]).value2) ])(_1007);
                };
            };
            throw new Error("Failed pattern match");
        };
        if (_367 instanceof Text_Smolder_Markup.Empty) {
            return [  ];
        };
        throw new Error("Failed pattern match");
    };
    return {
        Element: Element, 
        Text: Text, 
        renderMarkup: renderMarkup
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_String = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Text_Smolder_Renderer_Util = PS.Text_Smolder_Renderer_Util;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var renderNode = function (_393) {
        if (_393 instanceof Text_Smolder_Renderer_Util.Element) {
            var showTail = function (_394) {
                if (_394.length === 0) {
                    return "/>";
                };
                return ">" + (Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(showNode))(_394)) + ("</" + (_393.value0 + ">")));
            };
            var showAttrs = function (a_1) {
                var pair = function (k) {
                    return " " + (k + (function () {
                        var _1013 = Data_Map.lookup(Prelude.ordString)(k)(a_1);
                        if (_1013 instanceof Data_Maybe.Just) {
                            return "=\"" + (_1013.value0 + "\"");
                        };
                        if (_1013 instanceof Data_Maybe.Nothing) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(pair)(Data_Map.keys(a_1)));
            };
            return "<" + (_393.value0 + (showAttrs(_393.value1) + showTail(_393.value2)));
        };
        if (_393 instanceof Text_Smolder_Renderer_Util.Text) {
            return _393.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showNode = new Prelude.Show(renderNode);
    var render = function (m) {
        return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(renderNode)(Text_Smolder_Renderer_Util.renderMarkup(m)));
    };
    return {
        render: render, 
        renderNode: renderNode, 
        showNode: showNode
    };
})();
var PS = PS || {};
PS.Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Math = PS.Math;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    function User(value0) {
        this.value0 = value0;
    };
    User.create = function (value0) {
        return new User(value0);
    };
    function Normal() {

    };
    Normal.value = new Normal();
    function Me() {

    };
    Me.value = new Me();
    function Status() {

    };
    Status.value = new Status();
    function Help() {

    };
    Help.value = new Help();
    function Unknown() {

    };
    Unknown.value = new Unknown();
    function Message(value0) {
        this.value0 = value0;
    };
    Message.create = function (value0) {
        return new Message(value0);
    };
    function Chat(value0) {
        this.value0 = value0;
    };
    Chat.create = function (value0) {
        return new Chat(value0);
    };
    var user = {
        nick: "", 
        hp: 0, 
        maxHp: 0, 
        monster: "", 
        prepared: 0, 
        level: 0, 
        exp: 0
    };
    var userChangeHp = function (_396) {
        return function (_397) {
            return User.create((function () {
                var _1021 = {};
                for (var _1022 in _397.value0) {
                    if (_397.value0.hasOwnProperty(_1022)) {
                        _1021[_1022] = _397.value0[_1022];
                    };
                };
                _1021.hp = Math.min(_396(_397.value0.hp))(_397.value0.maxHp);
                return _1021;
            })());
        };
    };
    var userChangePrepared = function (_398) {
        return function (_399) {
            return User.create((function () {
                var _1026 = {};
                for (var _1027 in _399.value0) {
                    if (_399.value0.hasOwnProperty(_1027)) {
                        _1026[_1027] = _399.value0[_1027];
                    };
                };
                _1026.prepared = _398(_399.value0.prepared);
                return _1026;
            })());
        };
    };
    var userUser = function (s) {
        return User.create((function () {
            var _1029 = {};
            for (var _1030 in user) {
                if (user.hasOwnProperty(_1030)) {
                    _1029[_1030] = user[_1030];
                };
            };
            _1029.nick = s;
            _1029.hp = 80;
            _1029.maxHp = 80;
            _1029.level = 1;
            return _1029;
        })());
    };
    var readUsers = function (_414) {
        return function (_415) {
            return _414(_415.value0.users)(new Chat(_415.value0));
        };
    };
    var readUser = function (f) {
        return function (name) {
            return readUsers(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Map.lookup(Prelude.ordString)(name)));
        };
    };
    var readMe = function (_416) {
        return function (_417) {
            return readUser(_416)(_417.value0.me)(new Chat(_417.value0));
        };
    };
    var gainExp = function (_400) {
        return function (_401) {
            var newExp = _401.value0.exp + _400;
            return newExp >= 2 ? User.create((function () {
    var _1039 = {};
    for (var _1040 in _401.value0) {
        if (_401.value0.hasOwnProperty(_1040)) {
            _1039[_1040] = _401.value0[_1040];
        };
    };
    _1039.exp = 0;
    _1039.level = _401.value0.level + 1;
    return _1039;
})()) : User.create((function () {
    var _1041 = {};
    for (var _1042 in _401.value0) {
        if (_401.value0.hasOwnProperty(_1042)) {
            _1041[_1042] = _401.value0[_1042];
        };
    };
    _1041.exp = newExp;
    return _1041;
})());
        };
    };
    var changeUsers = function (_404) {
        return function (_405) {
            return Chat.create((function () {
                var _1046 = {};
                for (var _1047 in _405.value0) {
                    if (_405.value0.hasOwnProperty(_1047)) {
                        _1046[_1047] = _405.value0[_1047];
                    };
                };
                _1046.users = _404(_405.value0.users);
                return _1046;
            })());
        };
    };
    var changeUser = function (f) {
        return function (name) {
            return changeUsers(Data_Map.alter(Prelude.ordString)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(f)))(name));
        };
    };
    var changeTime = function (_402) {
        return function (_403) {
            return Chat.create((function () {
                var _1051 = {};
                for (var _1052 in _403.value0) {
                    if (_403.value0.hasOwnProperty(_1052)) {
                        _1051[_1052] = _403.value0[_1052];
                    };
                };
                _1051.time = _402(_403.value0.time);
                return _1051;
            })());
        };
    };
    var changeMe = function (_406) {
        return function (_407) {
            return changeUser(_406)(_407.value0.me)(new Chat(_407.value0));
        };
    };
    var changeLost = function (_410) {
        return function (_411) {
            return Chat.create((function () {
                var _1059 = {};
                for (var _1060 in _411.value0) {
                    if (_411.value0.hasOwnProperty(_1060)) {
                        _1059[_1060] = _411.value0[_1060];
                    };
                };
                _1059.lost = _410(_411.value0.lost);
                return _1059;
            })());
        };
    };
    var changeLog = function (_408) {
        return function (_409) {
            return Chat.create((function () {
                var _1064 = {};
                for (var _1065 in _409.value0) {
                    if (_409.value0.hasOwnProperty(_1065)) {
                        _1064[_1065] = _409.value0[_1065];
                    };
                };
                _1064.inputLog = _408(_409.value0.inputLog);
                return _1064;
            })());
        };
    };
    return {
        Chat: Chat, 
        Help: Help, 
        Me: Me, 
        Message: Message, 
        Normal: Normal, 
        Status: Status, 
        Unknown: Unknown, 
        User: User, 
        changeLog: changeLog, 
        changeLost: changeLost, 
        changeMe: changeMe, 
        changeTime: changeTime, 
        changeUser: changeUser, 
        changeUsers: changeUsers, 
        gainExp: gainExp, 
        readMe: readMe, 
        readUser: readUser, 
        readUsers: readUsers, 
        user: user, 
        userChangeHp: userChangeHp, 
        userChangePrepared: userChangePrepared, 
        userUser: userUser
    };
})();
var PS = PS || {};
PS.Globals = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function setGlobalChat (ch) {
        return function () {
            _globalChat = ch;
        }
    }
    ;
    
    function getGlobalChat () {
        return _globalChat;
    }
    ;
    var withChat = function (f) {
        return function __do() {
            var _20 = getGlobalChat();
            return setGlobalChat(f(_20))();
        };
    };
    return {
        getGlobalChat: getGlobalChat, 
        setGlobalChat: setGlobalChat, 
        withChat: withChat
    };
})();
var PS = PS || {};
PS.Util = (function () {
    "use strict";
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Data_String = PS.Data_String;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Math = PS.Math;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Document = PS.Data_DOM_Simple_Document;
    
    function promptI (a) {
        return function () {
            return window.prompt(a)
        }
    }
    ;
    
    function alertI (a) {
        return function () {
            window.alert(a);
        }
    }
    ;
    
    function scrollToEnd (e) {
        return function () {
            e.scrollTop = e.scrollHeight;
        }
    }
    ;
    var startsWith = function (pat) {
        return function (s) {
            return Data_String.take(Data_String.length(pat))(s) === pat;
        };
    };
    var repeatN = function (_420) {
        return function (_421) {
            if (_420 < 1) {
                return [  ];
            };
            return Prelude[":"](_421)(repeatN(_420 - 1)(_421));
        };
    };
    var queryElement = function (s) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow))(Data_DOM_Simple_Element.querySelector(Data_DOM_Simple_Document.htmlDocumentElement)(s));
    };
    var prompt = promptI;
    var isSpace = function (_419) {
        if (Data_Char.charString(_419) === " ") {
            return true;
        };
        if (Data_Char.charString(_419) === "\t") {
            return true;
        };
        if (Data_Char.charString(_419) === "\n") {
            return true;
        };
        return false;
    };
    var floor = Math.floor;
    var consumeUnspace = Data_String.dropWhile(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(isSpace));
    var consumeSpace = Data_String.dropWhile(isSpace);
    var applyN = function (n) {
        return function (f) {
            return function (a) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(Prelude["$"]))(a)(repeatN(n)(f));
            };
        };
    };
    var alert = alertI;
    var addLead = function (ch) {
        return function (n) {
            return function (s) {
                return Data_String.joinWith("")(repeatN(n - Data_String.length(s))(ch)) + s;
            };
        };
    };
    return {
        addLead: addLead, 
        alert: alert, 
        alertI: alertI, 
        applyN: applyN, 
        consumeSpace: consumeSpace, 
        consumeUnspace: consumeUnspace, 
        floor: floor, 
        isSpace: isSpace, 
        prompt: prompt, 
        promptI: promptI, 
        queryElement: queryElement, 
        repeatN: repeatN, 
        scrollToEnd: scrollToEnd, 
        startsWith: startsWith
    };
})();
var PS = PS || {};
PS.Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function random1 (_) {
        return Math.random();
    }
    ;
    
    function randomRange (n) {
        return Math.floor(Math.random()*(n+1));
    }
    ;
    var random = random1;
    return {
        random: random, 
        random1: random1, 
        randomRange: randomRange
    };
})();
var PS = PS || {};
PS.Chat = (function () {
    "use strict";
    var Data_Map = PS.Data_Map;
    var Data_Foldable = PS.Data_Foldable;
    var Prelude = PS.Prelude;
    var Util = PS.Util;
    var Data_Tuple = PS.Data_Tuple;
    var Types = PS.Types;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Debug_Trace = PS.Debug_Trace;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Eps = PS.Eps;
    var Text_Smolder_Renderer_String = PS.Text_Smolder_Renderer_String;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var $greater$greater = function (__dict_Monad_204) {
        return function (a) {
            return function (b) {
                return Prelude[">>="](__dict_Monad_204["__superclass_Prelude.Bind_1"]())(a)(function (_26) {
                    return b;
                });
            };
        };
    };
    var span$prime = Text_Smolder_Markup.Parent.create("span");
    var showTime = Prelude[">>>"](Prelude.semigroupoidArr)(Prelude.show(Prelude.showNumber))(Util.addLead("0")(4));
    var setMe = function (_424) {
        return function (_425) {
            return Types.Chat.create((function () {
                var _1074 = {};
                for (var _1075 in _425.value0) {
                    if (_425.value0.hasOwnProperty(_1075)) {
                        _1074[_1075] = _425.value0[_1075];
                    };
                };
                _1074.me = _424;
                return _1074;
            })());
        };
    };
    var renderUser = function (_442) {
        var wounded = function (t) {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("user_stat"))(Text_Smolder_Markup.text(" (" + (t + ")")));
        };
        return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("user_nick"))(Text_Smolder_Markup.text(_442.value0.nick)))(function () {
            var _1078 = _442.value0.hp / _442.value0.maxHp;
            if (Eps.ieq(_1078)(1)) {
                return Prelude["return"](Text_Smolder_Markup.monadMarkupM)(Prelude.unit);
            };
            if (_1078 > 0.8) {
                return wounded("lightly wounded");
            };
            if (_1078 > 0.5) {
                return wounded("moderately wounded");
            };
            if (_1078 > 0.3) {
                return wounded("severely wounded");
            };
            if (_1078 > 0) {
                return wounded("almost dead");
            };
            return wounded("walking corpse");
        });
    };
    var renderMessage = function (_441) {
        if (_441.value0.t instanceof Types.Normal) {
            return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_date"))(Text_Smolder_Markup.text(showTime(_441.value0.time))))(function () {
                return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_angl"))(Text_Smolder_Markup.text(" <")))(function () {
                    return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_nick"))(Text_Smolder_Markup.text(_441.value0.nick)))(function () {
                        return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_angl"))(Text_Smolder_Markup.text("> ")))(function () {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_text"))(Text_Smolder_Markup.text(_441.value0.text));
                        });
                    });
                });
            });
        };
        if (_441.value0.t instanceof Types.Me) {
            return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_date"))(Text_Smolder_Markup.text(showTime(_441.value0.time))))(function () {
                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_me"))(Text_Smolder_Markup.text(" * " + (_441.value0.nick + (" " + _441.value0.text))));
            });
        };
        if (_441.value0.t instanceof Types.Status) {
            return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_date"))(Text_Smolder_Markup.text(showTime(_441.value0.time))))(function () {
                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_stat"))(Text_Smolder_Markup.text(" * " + (_441.value0.nick + (" " + _441.value0.text))));
            });
        };
        return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_date"))(Text_Smolder_Markup.text(showTime(_441.value0.time))))(function () {
            return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup.text(" "))(function () {
                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(Text_Smolder_HTML_Attributes.className("msg_text"))(Text_Smolder_Markup.text(_441.value0.nick + (" ?? " + _441.value0.text)));
            });
        });
    };
    var reLog = function (_435) {
        return Types.Chat.create((function () {
            var _1084 = {};
            for (var _1085 in _435.value0) {
                if (_435.value0.hasOwnProperty(_1085)) {
                    _1084[_1085] = _435.value0[_1085];
                };
            };
            _1084.inputLog = Prelude["++"](Data_Array.semigroupArray)(Data_Array.reverse(_435.value0.inputLogA))(_435.value0.inputLog);
            _1084.inputLogA = [  ];
            return _1084;
        })());
    };
    var putMessage = function (_426) {
        return function (_427) {
            return Types.Chat.create((function () {
                var _1089 = {};
                for (var _1090 in _427.value0) {
                    if (_427.value0.hasOwnProperty(_1090)) {
                        _1089[_1090] = _427.value0[_1090];
                    };
                };
                _1089.messages = Prelude["++"](Data_Array.semigroupArray)(_427.value0.messages)([ _426 ]);
                return _1089;
            })());
        };
    };
    var messageParse = function (s) {
        var rest = Prelude[">>>"](Prelude.semigroupoidArr)(Util.consumeUnspace)(Util.consumeSpace);
        if (Util.startsWith("/me ")(s)) {
            return new Data_Tuple.Tuple(Types.Me.value, rest(s));
        };
        if (Util.startsWith("/help")(s)) {
            return new Data_Tuple.Tuple(Types.Help.value, s);
        };
        if (Util.startsWith("/")(s)) {
            return new Data_Tuple.Tuple(Types.Unknown.value, s);
        };
        return new Data_Tuple.Tuple(Types.Normal.value, s);
    };
    var makeMessage = function (_428) {
        return function (_429) {
            return function (_430) {
                return function (_431) {
                    return putMessage(new Types.Message({
                        time: _431.value0.time, 
                        nick: _429, 
                        text: _430, 
                        t: _428
                    }))(new Types.Chat(_431.value0));
                };
            };
        };
    };
    var userMessage = function (_432) {
        return function (_433) {
            return function (_434) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(makeMessage(_432)(_434.value0.me)(Prelude[">>>"](Prelude.semigroupoidArr)(messageParse)(Data_Tuple.snd)(_433)))(Prelude[">>>"](Prelude.semigroupoidArr)(reLog)(Types.changeLog(Prelude[":"](_433))))(new Types.Chat(_434.value0));
            };
        };
    };
    var loopLogUp = function (_436) {
        return function (_437) {
            return Prelude["/="](Prelude.eqArray(Prelude.eqString))(_437.value0.inputLog)([  ]) ? Types.Chat.create((function () {
    var _1104 = {};
    for (var _1105 in _437.value0) {
        if (_437.value0.hasOwnProperty(_1105)) {
            _1104[_1105] = _437.value0[_1105];
        };
    };
    _1104.inputLog = Data_Array.drop(1)(_437.value0.inputLog);
    _1104.inputNow = Data_Maybe.maybe("??")(Prelude.id(Prelude.categoryArr))(Data_Array.head(_437.value0.inputLog));
    _1104.inputLogA = Prelude[":"](_436)(_437.value0.inputLogA);
    return _1104;
})()) : Types.Chat.create((function () {
    var _1106 = {};
    for (var _1107 in _437.value0) {
        if (_437.value0.hasOwnProperty(_1107)) {
            _1106[_1107] = _437.value0[_1107];
        };
    };
    _1106.inputNow = _436;
    return _1106;
})());
        };
    };
    var loopLogDown = function (_438) {
        return function (_439) {
            return Prelude["/="](Prelude.eqArray(Prelude.eqString))(_439.value0.inputLogA)([  ]) ? Types.Chat.create((function () {
    var _1111 = {};
    for (var _1112 in _439.value0) {
        if (_439.value0.hasOwnProperty(_1112)) {
            _1111[_1112] = _439.value0[_1112];
        };
    };
    _1111.inputLogA = Data_Array.drop(1)(_439.value0.inputLogA);
    _1111.inputNow = Data_Maybe.maybe("??")(Prelude.id(Prelude.categoryArr))(Data_Array.head(_439.value0.inputLogA));
    _1111.inputLog = Prelude[":"](_438)(_439.value0.inputLog);
    return _1111;
})()) : new Types.Chat(_439.value0);
        };
    };
    var emptyChat = new Types.Chat({
        users: Data_Map.fromList(Prelude.ordString)([  ]), 
        messages: [  ], 
        me: "??", 
        time: 0, 
        inputLog: [  ], 
        inputLogA: [  ], 
        inputNow: "", 
        lost: false, 
        won: false
    });
    var chatScroll = Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat_messages_wrap"))(function (_24) {
        if (_24 instanceof Data_Maybe.Just) {
            return Util.scrollToEnd(_24.value0);
        };
        throw new Error("Failed pattern match");
    });
    var chatResize = Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat_messages_wrap"))(function (_23) {
        if (_23 instanceof Data_Maybe.Just) {
            return function __do() {
                var _22 = Data_DOM_Simple_Window.innerHeight(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                Debug_Trace.trace(Prelude.show(Prelude.showNumber)(_22))();
                return Data_DOM_Simple_Element.setAttribute(Data_DOM_Simple_Element.htmlElement)("style")("height:" + (Prelude.show(Prelude.showNumber)(_22 * 0.7) + "px"))(_23.value0)();
            };
        };
        throw new Error("Failed pattern match");
    });
    var chatFocus = Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat_input_line"))(function (_25) {
        if (_25 instanceof Data_Maybe.Just) {
            return function __do() {
                Data_DOM_Simple_Element.focus(_25.value0)();
                return Prelude.unit;
            };
        };
        throw new Error("Failed pattern match");
    });
    var attrId = Text_Smolder_Markup.attribute("id");
    var fullChatRender = function (_443) {
        return Text_Smolder_Renderer_String.render(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_main"))(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_messages"))(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.h2(Text_Smolder_Markup.text("Messages")))(function () {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_messages_wrap"))(Data_Foldable.foldl(Data_Foldable.foldableArray)($greater$greater(Text_Smolder_Markup.monadMarkupM))(Prelude["return"](Text_Smolder_Markup.monadMarkupM)(Prelude.unit))(Data_Array.map(Prelude["<<<"](Prelude.semigroupoidArr)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.p)(Text_Smolder_HTML_Attributes.className("message")))(renderMessage))(_443.value0.messages)));
        })))(function () {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_users"))(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.h2(Text_Smolder_Markup.text("Users")))(function () {
                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_users_wrap"))(Data_Foldable.foldl(Data_Foldable.foldableArray)($greater$greater(Text_Smolder_Markup.monadMarkupM))(Prelude["return"](Text_Smolder_Markup.monadMarkupM)(Prelude.unit))(Data_Array.map(Prelude["<<<"](Prelude.semigroupoidArr)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.p)(Text_Smolder_HTML_Attributes.className("user")))(renderUser))(Data_Map.values(_443.value0.users))));
            }));
        })))(function () {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.div)(attrId("chat_input"))(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(span$prime)(attrId("chat_input_nick"))(Text_Smolder_Markup.text("< " + (_443.value0.me + " >"))))(function () {
                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(Text_Smolder_HTML.input)(attrId("chat_input_line")))(Text_Smolder_HTML_Attributes["type'"]("text"));
            }));
        }));
    };
    var chatReload = function (chat) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat"))(function (_21) {
            if (_21 instanceof Data_Maybe.Just) {
                return function __do() {
                    Data_DOM_Simple_Element.setInnerHTML(Data_DOM_Simple_Element.htmlElement)(fullChatRender(chat))(_21.value0)();
                    chatFocus();
                    chatResize();
                    chatScroll();
                    return Prelude.unit;
                };
            };
            throw new Error("Failed pattern match");
        });
    };
    var addUser = function (_422) {
        return function (_423) {
            return Data_Map.member(Prelude.ordString)(_422.value0.nick)(_423.value0.users) ? addUser(Types.User.create((function () {
    var _1127 = {};
    for (var _1128 in _422.value0) {
        if (_422.value0.hasOwnProperty(_1128)) {
            _1127[_1128] = _422.value0[_1128];
        };
    };
    _1127.nick = _422.value0.nick + "_";
    return _1127;
})()))(new Types.Chat(_423.value0)) : makeMessage(Types.Status.value)(_422.value0.nick)("enters chat")(Types.Chat.create((function () {
    var _1129 = {};
    for (var _1130 in _423.value0) {
        if (_423.value0.hasOwnProperty(_1130)) {
            _1129[_1130] = _423.value0[_1130];
        };
    };
    _1129.users = Data_Map.insert(Prelude.ordString)(_422.value0.nick)(new Types.User(_422.value0))(_423.value0.users);
    return _1129;
})()));
        };
    };
    var addUsers = function (users) {
        return function (chat) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(addUser))(chat)(users);
        };
    };
    var useredChat = function (name) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(setMe(name))(addUser(Types.userUser(name)))(emptyChat);
    };
    return {
        ">>": $greater$greater, 
        addUser: addUser, 
        addUsers: addUsers, 
        attrId: attrId, 
        chatFocus: chatFocus, 
        chatReload: chatReload, 
        chatResize: chatResize, 
        chatScroll: chatScroll, 
        emptyChat: emptyChat, 
        fullChatRender: fullChatRender, 
        loopLogDown: loopLogDown, 
        loopLogUp: loopLogUp, 
        makeMessage: makeMessage, 
        messageParse: messageParse, 
        putMessage: putMessage, 
        reLog: reLog, 
        renderMessage: renderMessage, 
        renderUser: renderUser, 
        setMe: setMe, 
        showTime: showTime, 
        "span'": span$prime, 
        userMessage: userMessage, 
        useredChat: useredChat
    };
})();
var PS = PS || {};
PS.Actions = (function () {
    "use strict";
    var Types = PS.Types;
    var Prelude = PS.Prelude;
    var Util = PS.Util;
    var Chat = PS.Chat;
    var Data_Maybe = PS.Data_Maybe;
    var statusMessage = function (_449) {
        return Chat.makeMessage(Types.Status.value)(_449.value0.nick);
    };
    var sendMessage = function (_447) {
        return Chat.makeMessage(Types.Normal.value)(_447.value0.nick);
    };
    var meMessage = function (_448) {
        return Chat.makeMessage(Types.Me.value)(_448.value0.nick);
    };
    var fightUser = function (_445) {
        return function (_446) {
            var hitMsg = _446 === 0 ? "misses " : "hits ";
            return Types.readMe(function (_444) {
                if (_444 instanceof Data_Maybe.Just) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(Types.changeMe(Types.userChangeHp(Prelude["+"](Prelude.numNumber)(-Util.floor(_446 + _444.value0.value0.level * _446 / 2)))))(Chat.makeMessage(Types.Me.value)(_445.value0.nick)(hitMsg + _444.value0.value0.nick));
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    return {
        fightUser: fightUser, 
        meMessage: meMessage, 
        sendMessage: sendMessage, 
        statusMessage: statusMessage
    };
})();
var PS = PS || {};
PS.LeetOne = (function () {
    "use strict";
    var Types = PS.Types;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Random = PS.Random;
    var Data_Array = PS.Data_Array;
    var Actions = PS.Actions;
    var Eps = PS.Eps;
    var randomMessage = function (s) {
        return Data_Maybe.maybe("does something")(Prelude.id(Prelude.categoryArr))(Data_Array["!!"](s)(Random.randomRange(Data_Array.length(s) - 1)));
    };
    var leetOne = Types.User.create((function () {
        var _1145 = {};
        for (var _1146 in Types.user) {
            if (Types.user.hasOwnProperty(_1146)) {
                _1145[_1146] = Types.user[_1146];
            };
        };
        _1145.nick = "1337 1";
        _1145.hp = 100500;
        _1145.maxHp = 100500;
        _1145.monster = "1337";
        return _1145;
    })());
    var killMessages = [ "come on, kill that ", "HIT THAT ", "eeh, can't you kill ", "please, kill ", "stop shambling around, kill ", "may i ask you to assassinate " ];
    var hurtMessages = [ ", why d0 U hurt me?!", ", WHy Do Y0u hUr1 m3!11", ", Th4t hUrts!", ", St0p d01ng THIS!!!", ", U R MORON!", ", U b100dy B4ST4RD!", ", you will pay for this..." ];
    var healMessages = [ "drinks white potion", "zaps a quaint wand", "casts spell", "kneels and offers prayer to some god" ];
    var leetAct = function (_450) {
        return function (_451) {
            var timedAction = (function () {
                if (Eps.ieq(_451.value0.time)(0)) {
                    return Actions.sendMessage(_450)("hello, " + (_451.value0.me + ", welcome to our humble chat!"));
                };
                if (Eps.ieq(_451.value0.time)(1)) {
                    return Actions.sendMessage(_450)("i am the l33t one!");
                };
                if (Eps.ieq(_451.value0.time)(2)) {
                    return Actions.meMessage(_450)("will guide you to the victory!");
                };
                if (Eps.ieq(_451.value0.time)(3)) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(Actions.sendMessage(_450)("so, first thing you need to know:"))(Actions.sendMessage(_450)("you need to fight to survive"));
                };
                if (Eps.ieq(_451.value0.time)(4)) {
                    return Actions.sendMessage(_450)("if you're ready, i'll show you example");
                };
                if (Eps.ieq(_451.value0.time)(5)) {
                    return Actions.sendMessage(_450)("see this weak rat? try to *hit* it so that it doesn't hit you!");
                };
                if (Eps.ieq(_451.value0.time)(9)) {
                    return Actions.sendMessage(_450)("now that rat was a weak one. real rats are tougher");
                };
                if (Eps.ieq(_451.value0.time)(10)) {
                    return Actions.sendMessage(_450)("to fight other monsters effectively, you must *prepare*");
                };
                if (Eps.ieq(_451.value0.time)(11)) {
                    return Actions.sendMessage(_450)("and if you are in deep trouble, try to *heal*");
                };
                if (Eps.ieq(_451.value0.time)(12)) {
                    return Actions.sendMessage(_450)("now fight and don't get killed!");
                };
                if (Eps.ieq(_451.value0.time)(26)) {
                    return Actions.meMessage(_450)("feels someone quite powerful arriving!");
                };
                if (Eps.ieq(_451.value0.time)(40)) {
                    return Actions.meMessage(_450)("feels someone powerful arriving!");
                };
                if (Eps.ieq(_451.value0.time)(50)) {
                    return Actions.meMessage(_450)("feels someone very powerful arriving!");
                };
                return Prelude.id(Prelude.categoryArr);
            })();
            var killMonsterAction = function (name) {
                return Types.readUser(function (user) {
                    return Random.random(Prelude.unit) > 0.6 ? (function () {
    if (user instanceof Data_Maybe.Just) {
        return Actions.sendMessage(_450)(randomMessage(killMessages) + name);
    };
    if (user instanceof Data_Maybe.Nothing) {
        return Prelude.id(Prelude.categoryArr);
    };
    throw new Error("Failed pattern match");
})() : Prelude.id(Prelude.categoryArr);
                })(name);
            };
            var hurtAction = (function () {
                if (_450.value0.hp !== _450.value0.maxHp) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(Types.changeUser(Types.userChangeHp(Prelude["const"](_450.value0.maxHp)))(_450.value0.nick))(Prelude[">>>"](Prelude.semigroupoidArr)(Actions.sendMessage(_450)(_451.value0.me + randomMessage(hurtMessages)))(Prelude[">>>"](Prelude.semigroupoidArr)(Actions.meMessage(_450)(randomMessage(healMessages)))(Actions.meMessage(_450)("is completely healed"))));
                };
                return Prelude.id(Prelude.categoryArr);
            })();
            return Prelude[">>>"](Prelude.semigroupoidArr)(hurtAction)(Prelude[">>>"](Prelude.semigroupoidArr)(timedAction)(Prelude[">>>"](Prelude.semigroupoidArr)(killMonsterAction("weak rat"))(Prelude[">>>"](Prelude.semigroupoidArr)(killMonsterAction("rat"))(killMonsterAction("rat_")))))(new Types.Chat(_451.value0));
        };
    };
    return {
        healMessages: healMessages, 
        hurtMessages: hurtMessages, 
        killMessages: killMessages, 
        leetAct: leetAct, 
        leetOne: leetOne, 
        randomMessage: randomMessage
    };
})();
var PS = PS || {};
PS.Monsters = (function () {
    "use strict";
    var Random = PS.Random;
    var Util = PS.Util;
    var LeetOne = PS.LeetOne;
    var Actions = PS.Actions;
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Speaking = PS.Speaking;
    var Math = PS.Math;
    var speakingAct = function (mob) {
        return function (author) {
            var quote = Speaking.randomAuthorQuote(author);
            var baseHit = Math.min(Data_String.length(quote))(20);
            return Prelude[">>>"](Prelude.semigroupoidArr)(Actions.sendMessage(mob)(quote))(Actions.fightUser(mob)((baseHit + Random.randomRange(baseHit)) / 10));
        };
    };
    var getMonsterHp = function (_452) {
        if (_452 === "rat") {
            return 5 + Random.randomRange(3);
        };
        if (_452 === "weak rat") {
            return 3 + Random.randomRange(2);
        };
        if (Util.startsWith("speaking ")(_452)) {
            return 20 + Random.randomRange(10);
        };
        return 1;
    };
    var getMonsterAct = function (_453) {
        return function (_454) {
            if (_453 === "1337") {
                return LeetOne.leetAct(_454);
            };
            if (_453 === "rat") {
                return Actions.fightUser(_454)(Random.randomRange(2));
            };
            if (Util.startsWith("speaking ")(_453)) {
                return speakingAct(_454)(Data_String.drop(9)(_453));
            };
            return Prelude.id(Prelude.categoryArr);
        };
    };
    return {
        getMonsterAct: getMonsterAct, 
        getMonsterHp: getMonsterHp, 
        speakingAct: speakingAct
    };
})();
var PS = PS || {};
PS.Game = (function () {
    "use strict";
    var Util = PS.Util;
    var Types = PS.Types;
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var Actions = PS.Actions;
    var Data_Tuple = PS.Data_Tuple;
    var Debug = PS.Debug;
    var Chat = PS.Chat;
    var Eps = PS.Eps;
    var Random = PS.Random;
    var Speaking = PS.Speaking;
    var Monsters = PS.Monsters;
    var Data_String = PS.Data_String;
    var Data_Maybe = PS.Data_Maybe;
    var userPrepares = Types.changeMe(Types.userChangePrepared(Prelude["+"](Prelude.numNumber)(1)));
    var userHits = function (s) {
        var name = Prelude[">>>"](Prelude.semigroupoidArr)(Util.consumeSpace)(Prelude[">>>"](Prelude.semigroupoidArr)(Util.consumeUnspace)(Util.consumeSpace))(s);
        return Types.readMe(function (_455) {
            if (_455 instanceof Data_Maybe.Just) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(Types.changeUser(Types.userChangeHp(Prelude["+"](Prelude.numNumber)(-((1 + Random.randomRange(_455.value0.value0.prepared * 2)) * _455.value0.value0.level))))(name))(Types.changeMe(Types.userChangePrepared(Prelude["const"](0))));
            };
            throw new Error("Failed pattern match");
        });
    };
    var userHeals = Types.readMe(function (_456) {
        if (_456 instanceof Data_Maybe.Just) {
            return Prelude[">>>"](Prelude.semigroupoidArr)(Types.changeMe(Types.userChangeHp(Prelude["+"](Prelude.numNumber)((1 + Random.randomRange(_456.value0.value0.prepared) + _456.value0.value0.prepared + _456.value0.value0.level * 2) * 3))))(Types.changeMe(Types.userChangePrepared(Prelude["const"](0))));
        };
        throw new Error("Failed pattern match");
    });
    var userDead = function (_458) {
        return Debug.debug(_458.value0.nick + (" " + Prelude.show(Prelude.showNumber)(_458.value0.hp)))(_458.value0.hp <= 0);
    };
    var stripSpeaking = function (s) {
        return Util.startsWith("speaking ")(s) ? Data_String.drop(9)(s) : s;
    };
    var spawnType = function (_460) {
        if (_460 < 12) {
            return Eps.ieq(_460)(5) ? new Data_Maybe.Just(new Data_Tuple.Tuple("weak rat", 0)) : Data_Maybe.Nothing.value;
        };
        if (_460 < 27) {
            return (_460 % 1) < Eps.eps && (_460 % 5) < Eps.eps ? new Data_Maybe.Just(new Data_Tuple.Tuple("rat", Random.randomRange(2))) : Data_Maybe.Nothing.value;
        };
        if (_460 < 28) {
            return Eps.ieq(_460)(27) ? new Data_Maybe.Just(new Data_Tuple.Tuple("speaking " + Speaking.randomAuthor(Prelude.unit), 1)) : Data_Maybe.Nothing.value;
        };
        if (_460 < 43) {
            return Eps.ieq(_460)(42) ? new Data_Maybe.Just(new Data_Tuple.Tuple("speaking " + Speaking.randomAuthor(Prelude.unit), 3)) : Data_Maybe.Nothing.value;
        };
        if (_460 < 53) {
            return Eps.ieq(_460)(52) ? new Data_Maybe.Just(new Data_Tuple.Tuple("speaking " + Speaking.randomAuthor(Prelude.unit), 5)) : Data_Maybe.Nothing.value;
        };
        return Data_Maybe.Nothing.value;
    };
    var showDead = Prelude.flip(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(function (user) {
        return Actions.statusMessage(user)("dies and exits chat");
    })));
    var removeDead = Types.changeUsers(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Map.toList)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Array.filter(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(Prelude["<<<"](Prelude.semigroupoidArr)(userDead)(Data_Tuple.snd))))(Data_Map.fromList(Prelude.ordString))));
    var processUserTurn = function (_465) {
        if (Util.startsWith("prepare")(_465)) {
            return userPrepares;
        };
        if (Util.startsWith("hit")(_465)) {
            return userHits(_465);
        };
        if (Util.startsWith("heal")(_465)) {
            return userHeals;
        };
        return Prelude.id(Prelude.categoryArr);
    };
    var monsterUser = function (s) {
        return function (lvl) {
            var mhp = Monsters.getMonsterHp(s);
            return Types.User.create((function () {
                var _1168 = {};
                for (var _1169 in Types.user) {
                    if (Types.user.hasOwnProperty(_1169)) {
                        _1168[_1169] = Types.user[_1169];
                    };
                };
                _1168.nick = stripSpeaking(s);
                _1168.maxHp = mhp;
                _1168.hp = mhp;
                _1168.monster = s;
                _1168.level = lvl;
                return _1168;
            })());
        };
    };
    var spawn = function (_461) {
        if (_461 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        if (_461 instanceof Data_Maybe.Just) {
            return [ monsterUser(_461.value0.value0)(_461.value0.value1) ];
        };
        throw new Error("Failed pattern match");
    };
    var spawnMonsters = function (_459) {
        return Chat.addUsers(spawn(spawnType(_459.value0.time)))(new Types.Chat(_459.value0));
    };
    var monsterAct = function (_463) {
        return Monsters.getMonsterAct(_463.value0.monster)(new Types.User(_463.value0));
    };
    var monstersAct = function (_462) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(monsterAct))(new Types.Chat(_462.value0))(Data_Map.values(_462.value0.users));
    };
    var gainExpDead = function (l) {
        return Types.changeMe(Types.gainExp(Data_Array.length(l)));
    };
    var killDead = function (_457) {
        var dUsers = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Map.values)(Data_Array.filter(userDead))(_457.value0.users);
        return Prelude[">>>"](Prelude.semigroupoidArr)(showDead(dUsers))(Prelude[">>>"](Prelude.semigroupoidArr)(gainExpDead(dUsers))(removeDead))(new Types.Chat(_457.value0));
    };
    var checkWinner = function (_464) {
        return _464.value0.time > 54 && (Data_Array.length(Data_Map.values(_464.value0.users)) === 2 && !_464.value0.lost) ? Types.Chat.create((function () {
    var _1183 = {};
    for (var _1184 in _464.value0) {
        if (_464.value0.hasOwnProperty(_1184)) {
            _1183[_1184] = _464.value0[_1184];
        };
    };
    _1183.won = true;
    return _1183;
})()) : new Types.Chat(_464.value0);
    };
    var checkLooser = Types.readMe(function (user) {
        if (user instanceof Data_Maybe.Just) {
            return Prelude.id(Prelude.categoryArr);
        };
        if (user instanceof Data_Maybe.Nothing) {
            return Types.changeLost(Prelude["const"](true));
        };
        throw new Error("Failed pattern match");
    });
    var stepNPCs = Prelude[">>>"](Prelude.semigroupoidArr)(killDead)(Prelude[">>>"](Prelude.semigroupoidArr)(Types.changeTime(Prelude["+"](Prelude.numNumber)(1)))(Prelude[">>>"](Prelude.semigroupoidArr)(monstersAct)(Prelude[">>>"](Prelude.semigroupoidArr)(killDead)(Prelude[">>>"](Prelude.semigroupoidArr)(checkLooser)(Prelude[">>>"](Prelude.semigroupoidArr)(spawnMonsters)(checkWinner))))));
    var processNPCs = function (t) {
        return Util.applyN(t)(stepNPCs);
    };
    return {
        checkLooser: checkLooser, 
        checkWinner: checkWinner, 
        gainExpDead: gainExpDead, 
        killDead: killDead, 
        monsterAct: monsterAct, 
        monsterUser: monsterUser, 
        monstersAct: monstersAct, 
        processNPCs: processNPCs, 
        processUserTurn: processUserTurn, 
        removeDead: removeDead, 
        showDead: showDead, 
        spawn: spawn, 
        spawnMonsters: spawnMonsters, 
        spawnType: spawnType, 
        stepNPCs: stepNPCs, 
        stripSpeaking: stripSpeaking, 
        userDead: userDead, 
        userHeals: userHeals, 
        userHits: userHits, 
        userPrepares: userPrepares
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Events = PS.Data_DOM_Simple_Events;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Chat = PS.Chat;
    var Util = PS.Util;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Globals = PS.Globals;
    var Debug_Trace = PS.Debug_Trace;
    var Game = PS.Game;
    var Data_Map = PS.Data_Map;
    var LeetOne = PS.LeetOne;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Types = PS.Types;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var userWon = function __do() {
        Util.alert("YOU HAVE WON!! CONGRATULATIONS\n(reload page to start over..)")();
        return Prelude.unit;
    };
    var userLost = function __do() {
        Util.alert("YOU HAVE LOST :(\nreload page to start over..")();
        return Prelude.unit;
    };
    var setupChat = function __do() {
        var _39 = Util.prompt("Your name?")();
        return Chat.addUser(LeetOne.leetOne)(Chat.useredChat(_39));
    };
    var renderStatus = function (_466) {
        var prepMsg = function (_470) {
            if (_470.value0.prepared === 0) {
                return "you are not prepared";
            };
            if (_470.value0.prepared === 1) {
                return "you are slightly prepared";
            };
            if (_470.value0.prepared === 2) {
                return "you are quite prepared";
            };
            if (_470.value0.prepared === 3) {
                return "you are prepared";
            };
            return "you are PREPARED";
        };
        var lvlMsg = function (_469) {
            return Prelude.show(Prelude.showNumber)(_469.value0.level);
        };
        var hpMsg = function (_468) {
            return Prelude.show(Prelude.showNumber)(_468.value0.hp) + ("/" + Prelude.show(Prelude.showNumber)(_468.value0.maxHp));
        };
        var _1197 = Data_Map.lookup(Prelude.ordString)(_466.value0.me)(_466.value0.users);
        if (_1197 instanceof Data_Maybe.Just) {
            return "[you are level " + (lvlMsg(_1197.value0) + (", you are alive (" + (hpMsg(_1197.value0) + ("), " + (prepMsg(_1197.value0) + " ]")))));
        };
        if (_1197 instanceof Data_Maybe.Nothing) {
            return "[you are dead]";
        };
        throw new Error("Failed pattern match");
    };
    var userStatusReload = function (chat) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#player_status"))(function (_35) {
            if (_35 instanceof Data_Maybe.Just) {
                return Data_DOM_Simple_Element.setInnerHTML(Data_DOM_Simple_Element.htmlElement)(renderStatus(chat))(_35.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var processLooseWin = function __do() {
        var _36 = Globals.getGlobalChat();
        return (_36.value0.lost ? userLost : _36.value0.won ? userWon : Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit))();
    };
    var onLoad = function (_467) {
        return function __do() {
            var _38 = setupChat();
            Globals.setGlobalChat(_38)();
            Globals.withChat(Game.monstersAct)();
            var _37 = Globals.getGlobalChat();
            Chat.chatReload(_37)();
            userStatusReload(_37)();
            return Prelude.unit;
        };
    };
    var logRoll = function (f) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat_input_line"))(function (_31) {
            if (_31 instanceof Data_Maybe.Just) {
                return function __do() {
                    var _30 = Data_DOM_Simple_Element.value(Data_DOM_Simple_Element.htmlElement)(_31.value0)();
                    Globals.withChat(f(_30))();
                    var _29 = Globals.getGlobalChat();
                    return Data_DOM_Simple_Element.setValue(Data_DOM_Simple_Element.htmlElement)(_29.value0.inputNow)(_31.value0)();
                };
            };
            throw new Error("Failed pattern match");
        });
    };
    var iAmStuck = Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#hint"))(function (_40) {
        if (_40 instanceof Data_Maybe.Just) {
            return function __do() {
                Data_DOM_Simple_Element.setInnerHTML(Data_DOM_Simple_Element.htmlElement)("<p>Type /help and hit Enter.</p>")(_40.value0)();
                return Prelude.unit;
            };
        };
        throw new Error("Failed pattern match");
    });
    var doSendMessage = Prelude[">>="](Control_Monad_Eff.bindEff)(Util.queryElement("#chat_input_line"))(function (_34) {
        if (_34 instanceof Data_Maybe.Just) {
            return function __do() {
                var _33 = Data_DOM_Simple_Element.value(Data_DOM_Simple_Element.htmlElement)(_34.value0)();
                return (function () {
                    var parsed = Chat.messageParse(_33);
                    return function __do() {
                        (function () {
                            if (parsed.value0 instanceof Types.Normal && parsed.value1 === "") {
                                return Debug_Trace.trace("empty message");
                            };
                            if (parsed.value0 instanceof Types.Normal) {
                                return function __do() {
                                    Globals.withChat(Chat.userMessage(Types.Normal.value)(_33))();
                                    return Globals.withChat(Game.processNPCs(1))();
                                };
                            };
                            if (parsed.value0 instanceof Types.Me) {
                                return function __do() {
                                    Globals.withChat(Chat.userMessage(Types.Me.value)(_33))();
                                    Globals.withChat(Game.processUserTurn(parsed.value1))();
                                    return Globals.withChat(Game.processNPCs(1))();
                                };
                            };
                            if (parsed.value0 instanceof Types.Help) {
                                return function __do() {
                                    Prelude.unit;
                                    Globals.withChat(Chat.makeMessage(Types.Normal.value)("1337 1")("here's how to use chat:"))();
                                    Globals.withChat(Chat.makeMessage(Types.Normal.value)("1337 1")("enter message and press [enter]"))();
                                    Globals.withChat(Chat.makeMessage(Types.Normal.value)("1337 1")("to do something, use \"/me [action] [object]\" command.."))();
                                    return Globals.withChat(Chat.makeMessage(Types.Normal.value)("1337 1")("if it's supported by browser, you can use [up] and [down] for message history"))();
                                };
                            };
                            if (parsed.value0 instanceof Types.Unknown && parsed.value1 === "") {
                                return Debug_Trace.trace("unknown command");
                            };
                            return Debug_Trace.trace("completely unknown command");
                        })()();
                        var _32 = Globals.getGlobalChat();
                        Chat.chatReload(_32)();
                        userStatusReload(_32)();
                        processLooseWin();
                        return Prelude.unit;
                    };
                })()();
            };
        };
        throw new Error("Failed pattern match");
    });
    var onPress = function (ev) {
        return function __do() {
            var _28 = Data_DOM_Simple_Events.key(Data_DOM_Simple_Events.keyboardEventDOMEvent)(ev)();
            var _27 = Data_DOM_Simple_Events.keyCode(Data_DOM_Simple_Events.keyboardEventDOMEvent)(ev)();
            return (function () {
                var isEnter = _28 === "Enter" || _27 === 13;
                return function __do() {
                    (function () {
                        if (isEnter) {
                            return doSendMessage;
                        };
                        if (_28 === "Up") {
                            return logRoll(Chat.loopLogUp);
                        };
                        if (_28 === "Down") {
                            return logRoll(Chat.loopLogDown);
                        };
                        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                    })()();
                    return Prelude.unit;
                };
            })()();
        };
    };
    var main = function __do() {
        Data_DOM_Simple_Events.addUIEventListener(Data_DOM_Simple_Events.uiEventTargetHTMLWindow)(Data_DOM_Simple_Events.uiEventDOMEvent)(Data_DOM_Simple_Events.LoadEvent.value)(onLoad)(Data_DOM_Simple_Window.globalWindow)();
        return Data_DOM_Simple_Events.addKeyboardEventListener(Data_DOM_Simple_Events.keyboardEventTargetHTMLWindow)(Data_DOM_Simple_Events.keyboardEventDOMEvent)(Data_DOM_Simple_Events.KeypressEvent.value)(onPress)(Data_DOM_Simple_Window.globalWindow)();
    };
    return {
        doSendMessage: doSendMessage, 
        iAmStuck: iAmStuck, 
        logRoll: logRoll, 
        main: main, 
        onLoad: onLoad, 
        onPress: onPress, 
        processLooseWin: processLooseWin, 
        renderStatus: renderStatus, 
        setupChat: setupChat, 
        userLost: userLost, 
        userStatusReload: userStatusReload, 
        userWon: userWon
    };
})();
PS.Main.main();
